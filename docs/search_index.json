[["index.html", "Earth Hologenome Initiative | Pietroni et al. 2024 Hologenomic data generation and analysis in wild vertebrates 1 Introduction 1.1 Prepare the R environment", " Earth Hologenome Initiative | Pietroni et al. 2024 Hologenomic data generation and analysis in wild vertebrates Carlotta Pietroni, Nanna Gaun, Aoife Leonard, Jonas Lauritsen, Garazi Martin, Iñaki Odriozola, Ostaizka Aizpurua, Antton Alberdi1, Raphael Eisenhofer Last update: 2024-07-17 1 Introduction This webbook contains all the code used for the comparative study on the generation of metagenomic data from faeces of various species using three extraction methods. The raw code used for rendering this webbook is available in the following Github repository: https://github.com/earthhologenome/EHI_technical_considerations 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/earthhologenome/EHI_technical_considerations.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(rairtable) library(phyloseq) library(ggtree) library(ape) library(ggnewscale) library(ggtreeExtra) library(nlme) library(broom) library(broom.mixed) library(ggdist) library(sjPlot) library(multcomp) library(car) library(cluster) library(vegan) library(ggrepel) University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ "],["metadata-access.html", "2 Metadata access 2.1 Laboratory 2.2 Bioinformatics 2.3 Host species", " 2 Metadata access Earth Hologenome Initiative metadata are stored in Airtable databases. Contents of those databases can be fetched using the R package raritable. However, data can be directly fetched only with personal access tokens. The relevant fraction of the EHI metadata is published on the EHI website www.earthhologenome.org/database. The data used for this study were frozen on June 9th 2024. 2.1 Laboratory 2.1.1 Samples airtable(&quot;tblW03Z3DcjRdEkoS&quot;, &quot;appQpr6MxnaiVHsHy&quot;) %&gt;% read_airtable(., fields = c( #Sample columns &quot;Code&quot;,&quot;Type&quot;,&quot;Origin&quot;,&quot;Freshness&quot;,&quot;Freezing&quot;, #Host specimen columns &quot;specimen_id&quot;,&quot;Species&quot;,&quot;Family&quot;,&quot;Order&quot;,&quot;Class&quot;,&quot;Development&quot;,&quot;Sex&quot;,&quot;Length (mm)&quot;,&quot;Weight (g)&quot;, #Capture columns &quot;captures_flat&quot;,&quot;Place&quot;,&quot;Country&quot;,&quot;Biome&quot;,&quot;Environment&quot;,&quot;Latitude reduced&quot;,&quot;Longitude reduced&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% dplyr::select(-airtable_record_id) %&gt;% #rename columns rename( #Sample columns sample_id=Code, sample_type=Type, sample_origin=Origin, sample_freshness=Freshness, sample_freezing=Freezing, #Host specimen columns specimen_id=specimen_id, specimen_species=Species, specimen_order=Order, specimen_family=Family, specimen_class=Class, specimen_development=Development, specimen_sex=Sex, specimen_length=`Length (mm)`, specimen_weight=`Weight (g)`, #Capture columns capture_id=captures_flat, capture_place=Place, capture_country=Country, capture_biome=Biome, capture_environment=Environment, capture_latitude=`Latitude reduced`, capture_longitude=`Longitude reduced`, ) %&gt;% #remove negative controls filter(specimen_id != &quot;&quot;) %&gt;% #add taxonomy group for analysis mutate(tax_group = case_when( !str_detect(specimen_order, &quot;Chiroptera&quot;) &amp; str_detect(specimen_class, &quot;Mammalia&quot;) ~ &quot;Mammals&quot;, str_detect(specimen_order, &quot;Chiroptera&quot;) ~ &quot;Bats&quot;, str_detect(specimen_order, &quot;Squamata&quot;) ~ &quot;Reptiles&quot;, str_detect(specimen_class, &quot;Aves&quot;) ~ &quot;Birds&quot;, str_detect(specimen_class, &quot;Amphibia&quot;) ~ &quot;Amphibians&quot; )) %&gt;% #save clean table write_tsv(&quot;data/sample.tsv&quot;) 2.1.2 Extraction airtable(&quot;tblBcTZcRG1E9wsGO&quot;, &quot;appQpr6MxnaiVHsHy&quot;) %&gt;% read_airtable(., fields = c( #Sample columns &quot;Ex code&quot;,&quot;EX ng/ul&quot;,&quot;EX ul&quot;,&quot;EX DNA ng&quot;,&quot;bb_flat&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% dplyr::select(-airtable_record_id) %&gt;% #rename columns rename( extraction_id=`Ex code`, extraction_concentration=`EX ng/ul`, extraction_volume=`EX ul`, extraction_total=`EX DNA ng`, sample_id=`bb_flat`, ) %&gt;% #save clean table write_tsv(&quot;data/extraction.tsv&quot;) 2.1.3 Library airtable(&quot;tblo6AuYpxbbGw9gh&quot;, &quot;appQpr6MxnaiVHsHy&quot;) %&gt;% read_airtable(., fields = c( #Sample columns &quot;LI Code&quot;,&quot;ex_sample_flat&quot;,&quot;Datasets_flat&quot;,&quot;sample_flat&quot;, #library stats &quot;Input volume&quot;,&quot;Input DNA (ng)&quot;,&quot;Adaptor nM&quot;,&quot;Required PCR cycles&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% dplyr::select(-airtable_record_id) %&gt;% #rename columns rename( #sample identifiers library_id=`LI Code`, sample_id=sample_flat, extraction_id=ex_sample_flat, sequencing_datasets=Datasets_flat, #library stats library_input_volume=`Input volume`, library_input_dna=`Input DNA (ng)`, library_adaptor_molarity=`Adaptor nM`, library_PCR_cycles_required=`Required PCR cycles` ) %&gt;% #save clean table write_tsv(&quot;data/library.tsv&quot;) 2.1.4 Index airtable(&quot;tblhfsiR4NI9XJQG0&quot;, &quot;appQpr6MxnaiVHsHy&quot;) %&gt;% read_airtable(., fields = c( #Sample columns &quot;IN Code&quot;,&quot;li_sample_flat&quot;,&quot;Datasets_flat&quot;, #indexing stats &quot;Adaptors (nM)&quot;,&quot;Library (nM)&quot;,&quot;Number of PCR cycles&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% dplyr::select(-airtable_record_id) %&gt;% #rename columns rename( #sample identifiers index_id=`IN Code`, library_id=li_sample_flat, #indexing stats index_adaptors_molarity=`Adaptors (nM)`, index_library_molarity=`Library (nM)`, index_PCR_cycles_given=`Number of PCR cycles`) %&gt;% #save clean table write_tsv(&quot;data/index.tsv&quot;) 2.1.5 Sequence airtable(&quot;tblaMWLkBUn2g5gRR&quot;, &quot;appQpr6MxnaiVHsHy&quot;) %&gt;% read_airtable(., fields = c(#Sample columns &quot;EHI_number&quot;,&quot;in_code_flat&quot;, #Sequencing information &quot;Raw data size (GB)&quot;,&quot;Q20%&quot;,&quot;Q30%&quot;,&quot;GC%&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% dplyr::select(-airtable_record_id) %&gt;% #rename columns rename( #sample identifiers sequence_id=EHI_number, index_id=in_code_flat, #sequencing information sequence_data=`Raw data size (GB)`, sequence_q20=`Q20%`, sequence_q30=`Q30%`, sequence_gc=`GC%` ) %&gt;% #save clean table write_tsv(&quot;data/sequence.tsv&quot;) 2.2 Bioinformatics 2.2.1 Preprocessing airtable(&quot;tblJfLRU2FIVz37Y1&quot;, &quot;appQpr6MxnaiVHsHy&quot;) %&gt;% read_airtable(., fields = c(#Sample columns &quot;Code&quot;,&quot;EHI_plaintext&quot;,&quot;sample_code&quot;, #Host genome info &quot;reference_genome_flat&quot;,&quot;Reference genome closeness&quot;, #Quality-filtering statistics &quot;reads_pre_fastp&quot;,&quot;reads_post_fastp&quot;,&quot;bases_pre_fastp&quot;,&quot;bases_post_fastp&quot;,&quot;adapter_trimmed_reads&quot;,&quot;adapter_trimmed_bases&quot;,&quot;host_reads&quot;,&quot;metagenomic_bases&quot;,&quot;host_bases&quot;,&quot;host_duplicate_fraction&quot;, #Metagenome properties &quot;singlem_fraction&quot;,&quot;C&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% dplyr::select(-airtable_record_id) %&gt;% #rename columns rename( #data identifiers preprocessing_id=Code, sequence_id=EHI_plaintext, sample_id=sample_code, #host genome info reference_id=reference_genome_flat, reference_closenees=`Reference genome closeness`, #metagenomic complexity estimation nonpareil_coverage=C ) %&gt;% #save clean table write_tsv(&quot;data/preprocessing.tsv&quot;) 2.2.2 Assembly airtable(&quot;tblG6ZIvkYN844I97&quot;, &quot;appQpr6MxnaiVHsHy&quot;) %&gt;% read_airtable(., fields = c(&quot;ID&quot;,&quot;Assembly_code&quot;,&quot;EHI_number_api&quot;,&quot;preprocessed_flat&quot;, &quot;Type (from AB Batch)&quot;,&quot;metagenomic_bases&quot;,&quot;assembly_length&quot;,&quot;N50&quot;,&quot;L50&quot;,&quot;num_contigs&quot;,&quot;largest_contig&quot;,&quot;num_bins&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% dplyr::select(-airtable_record_id) %&gt;% #rename columns rename( #data identifiers assembly_input_id=ID, #in coassemblies multiple assembly_input_id&#39;s link to a single assembly_id assembly_id=Assembly_code, preprocessing_id=preprocessed_flat, sequence_id=EHI_number_api, #assembly information assembly_type=`Type (from AB Batch)`, assembly_input_bases=metagenomic_bases, #stats assembly_n50=N50, assembly_l50=L50, assembly_num_contigs=num_contigs, assembly_largest_contig=largest_contig, assembly_num_bins=num_bins ) %&gt;% #save clean table write_tsv(&quot;data/assembly.tsv&quot;) 2.2.3 Genomes airtable(&quot;tblMzd3oyaJhdeQcs&quot;, &quot;appWbHBNLE6iAsMRV&quot;) %&gt;% read_airtable(., fields = c(&quot;ID&quot;,&quot;eha_number&quot;, #Taxonomy &quot;domain&quot;,&quot;phylum&quot;,&quot;class&quot;,&quot;order&quot;,&quot;family&quot;,&quot;genus&quot;,&quot;species&quot;,&quot;taxonomy_level&quot;, #Quality &quot;completeness&quot;,&quot;contamination&quot;,&quot;size&quot;,&quot;GC&quot;,&quot;N50&quot;,&quot;coding_density&quot;,&quot;contigs&quot;, #Host &quot;host_species&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% dplyr::select(-airtable_record_id) %&gt;% #rename columns rename( #data identifiers mag_id=ID, assembly_id=eha_number, #taxonomy mag_domain=domain, mag_phylum=phylum, mag_class=class, mag_order=order, mag_family=family, mag_genus=genus, mag_species=species, mag_taxonomy_level=taxonomy_level, #mag stats mag_completeness=completeness, mag_contamination=contamination, mag_size=size, mag_gc=GC, mag_n50=N50, mag_contigs=contigs ) %&gt;% #save clean table write_tsv(&quot;data/mag.tsv&quot;) 2.2.4 MAG mapping airtable(&quot;tblWDyQmM9rQ9wq57&quot;, &quot;appWbHBNLE6iAsMRV&quot;) %&gt;% read_airtable(., fields = c(&quot;Code&quot;,&quot;EHI_sample_static&quot;, #Taxonomy &quot;MAG_mapping_percentage&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% dplyr::select(-airtable_record_id) %&gt;% #rename columns rename( mapping_id=Code, sequence_id=EHI_sample_static, mapping_percentage=MAG_mapping_percentage ) %&gt;% #save clean table write_tsv(&quot;data/mapping.tsv&quot;) 2.2.5 Reference genomes airtable(&quot;tbl1t5vnst50DjT9A&quot;, &quot;app6ADWyLxBkDcqYX&quot;) %&gt;% read_airtable(., fields = c(&quot;Code&quot;,&quot;Accession&quot;,&quot;species_flat&quot;,&quot;Quality&quot;,&quot;Size (MB)&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% dplyr::select(-airtable_record_id) %&gt;% #rename columns rename( #data identifiers reference_id=Code, reference_accession=Accession, reference_species=species_flat, #genome stats reference_quality=Quality, reference_size=`Size (MB)` ) %&gt;% #save clean table write_tsv(&quot;data/reference.tsv&quot;) 2.3 Host species host_metadata &lt;- airtable(&quot;tblaRHhZHRPMUjcKJ&quot;, &quot;app6ADWyLxBkDcqYX&quot;) %&gt;% read_airtable(., fields = c(&quot;Name&quot;,&quot;taxid&quot;,&quot;genus_flat&quot;,&quot;family_flat&quot;,&quot;order_flat&quot;,&quot;class_flat&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% dplyr::select(-airtable_record_id) %&gt;% #only retain samples associated with samples rename(host_species=Name, host_genus=genus_flat, host_family=family_flat, host_order=order_flat, host_class=class_flat) %&gt;% # Write to table write_tsv(&quot;data/host.tsv&quot;) "],["general-statistics.html", "3 General statistics 3.1 Sample statistics 3.2 Data statistics", " 3 General statistics 3.1 Sample statistics 3.1.1 All read_tsv(&quot;data/sample.tsv&quot;) %&gt;% summarise(specimens=n_distinct(specimen_id), species=n_distinct(specimen_species), orders=n_distinct(specimen_order), families=n_distinct(specimen_family)) %&gt;% tt() tinytable_anqt4yyppaosoit5jp6t .table td.tinytable_css_use3ypzraxw7kmib0f8r, .table th.tinytable_css_use3ypzraxw7kmib0f8r { border-bottom: solid 0.1em #d3d8dc; } specimens species orders families 4364 244 22 67 3.1.2 Subset Faecal and cloacal swab samples employed in the study. inner_join(read_tsv(&quot;data/sample.tsv&quot;), read_tsv(&quot;data/extraction.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% summarise(specimens=n_distinct(specimen_id), species=n_distinct(specimen_species), orders=n_distinct(specimen_order), families=n_distinct(specimen_family), swabs=n_distinct(sample_id[sample_type == &quot;Anal/cloacal swab&quot;]), faeces=n_distinct(sample_id[sample_type == &quot;Faecal&quot;])) %&gt;% tt() tinytable_bwehd9koj0mfkr6wue5f .table td.tinytable_css_gbl9j2vrwanhallq4weq, .table th.tinytable_css_gbl9j2vrwanhallq4weq { border-bottom: solid 0.1em #d3d8dc; } specimens species orders families swabs faeces 2025 151 17 54 442 1824 3.1.3 Origin of samples (Figure S1) read_tsv(&quot;data/sample.tsv&quot;) %&gt;% #subset columns dplyr::select( sample_id, specimen_species, specimen_order, specimen_class, capture_latitude, capture_longitude, tax_group ) %&gt;% #Add jitter to points mutate( capture_latitude_jitter=capture_latitude+rnorm(length(capture_latitude), mean=0, sd=0.5), capture_longitude_jitter=capture_longitude+rnorm(length(capture_longitude), mean=0, sd=0.5), ) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% #Plot map ggplot() + geom_map( data=map_data(&quot;world&quot;), map = map_data(&quot;world&quot;), aes(long, lat, map_id=region), color = &quot;white&quot;, fill = &quot;#cccccc&quot;, size = 0.2 ) + geom_point( aes(x=capture_longitude_jitter,y=capture_latitude_jitter, color=tax_group), alpha=0.5, size=0.5, shape=16) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + labs(color=&quot;Taxonomic order&quot;) + theme_minimal() + theme( axis.title.x=element_blank(), axis.title.y=element_blank(), legend.position = &quot;bottom&quot;) 3.2 Data statistics 3.2.1 Total data left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(bases_pre_fastp = bases_pre_fastp / 1000000000) %&gt;% #convert bases to gigabases (GB) summarise( total= sum(bases_pre_fastp, na.rm = TRUE), swabs=sum(bases_pre_fastp[sample_type == &quot;Anal/cloacal swab&quot;], na.rm = TRUE), faeces=sum(bases_pre_fastp[sample_type == &quot;Faecal&quot;], na.rm = TRUE), swabs_n=n_distinct(preprocessing_id[sample_type == &quot;Anal/cloacal swab&quot;], na.rm = TRUE), faeces_n=n_distinct(preprocessing_id[sample_type == &quot;Faecal&quot;], na.rm = TRUE), mean= mean(bases_pre_fastp, na.rm = TRUE), sd = sd(bases_pre_fastp, na.rm = TRUE), median=median(bases_pre_fastp, na.rm = TRUE), IQR=IQR(bases_pre_fastp, na.rm = TRUE) ) %&gt;% tt() tinytable_etm4g4no8rxe67e8jm8u .table td.tinytable_css_mmtxqxkhfsh7z9j4y66o, .table th.tinytable_css_mmtxqxkhfsh7z9j4y66o { border-bottom: solid 0.1em #d3d8dc; } total swabs faeces swabs_n faeces_n mean sd median IQR 11262.32 1998.166 9264.149 345 1702 5.561637 4.804119 4.918368 2.697444 3.2.2 Quality-filtered data read_tsv(&quot;data/preprocessing.tsv&quot;) %&gt;% mutate(bases_post_fastp = bases_post_fastp / 1000000000) %&gt;% #convert bases to gigabases (GB) summarise( total= sum(bases_post_fastp, na.rm = TRUE), mean= mean(bases_post_fastp, na.rm = TRUE), sd = sd(bases_post_fastp, na.rm = TRUE), median=median(bases_post_fastp, na.rm = TRUE), IQR=IQR(bases_post_fastp, na.rm = TRUE) ) %&gt;% tt() tinytable_cfl58smh21suacyqarus .table td.tinytable_css_5osa9hyuhpyi7xcdv0q7, .table th.tinytable_css_5osa9hyuhpyi7xcdv0q7 { border-bottom: solid 0.1em #d3d8dc; } total mean sd median IQR 13486.81 5.377518 4.586315 4.659982 2.81969 3.2.3 Host genomic data read_tsv(&quot;data/preprocessing.tsv&quot;) %&gt;% mutate(host_bases = host_bases / 1000000000) %&gt;% #convert bases to gigabases (GB) summarise( total= sum(host_bases, na.rm = TRUE), mean= mean(host_bases, na.rm = TRUE), sd = sd(host_bases, na.rm = TRUE), median=median(host_bases, na.rm = TRUE), IQR=IQR(host_bases, na.rm = TRUE) ) %&gt;% tt() tinytable_gi6zxyp46wy1ccxfh927 .table td.tinytable_css_bqx80rmmzdsdmltbf2ie, .table th.tinytable_css_bqx80rmmzdsdmltbf2ie { border-bottom: solid 0.1em #d3d8dc; } total mean sd median IQR 5554.962 2.19477 3.711089 0.731476 3.37658 3.2.4 Metagenomic data read_tsv(&quot;data/preprocessing.tsv&quot;) %&gt;% mutate(metagenomic_bases = metagenomic_bases / 1000000000) %&gt;% #convert bases to gigabases (GB) summarise( total= sum(metagenomic_bases, na.rm = TRUE), mean= mean(metagenomic_bases, na.rm = TRUE), sd = sd(metagenomic_bases, na.rm = TRUE), median=median(metagenomic_bases, na.rm = TRUE), IQR=IQR(metagenomic_bases, na.rm = TRUE) ) %&gt;% tt() tinytable_857w55tp3g6wcf623lr1 .table td.tinytable_css_v7tggdppihzafdvf77ov, .table th.tinytable_css_v7tggdppihzafdvf77ov { border-bottom: solid 0.1em #d3d8dc; } total mean sd median IQR 7931.853 3.133881 3.272415 2.964926 3.881528 3.2.5 Assemblies left_join(read_tsv(&quot;data/assembly.tsv&quot;), read_tsv(&quot;data/preprocessing.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sample.tsv&quot;),by=&quot;sample_id&quot;) %&gt;% group_by(assembly_type) %&gt;% summarise(assembly_n=n_distinct(assembly_id), swabs_n=n_distinct(assembly_id[sample_type == &quot;Anal/cloacal swab&quot;], na.rm = TRUE), faeces_n=n_distinct(assembly_id[sample_type == &quot;Faecal&quot;], na.rm = TRUE), swabs_size=sum(assembly_length[sample_type == &quot;Anal/cloacal swab&quot;], na.rm = TRUE), faeces_size=sum(assembly_length[sample_type == &quot;Faecal&quot;], na.rm = TRUE)) %&gt;% tt() tinytable_g5kqmsnps05t1qtujzi8 .table td.tinytable_css_rgcel74pv55lx6t3t5a7, .table th.tinytable_css_rgcel74pv55lx6t3t5a7 { border-bottom: solid 0.1em #d3d8dc; } assembly_type assembly_n swabs_n faeces_n swabs_size faeces_size Coassembly 294 41 227 20029149172 916263568901 Individual 1722 177 1377 2337823366 132226412145 Multisplit 1 0 1 0 0 NA 1 0 1 0 0 3.2.6 MAGs left_join(read_tsv(&quot;data/mag.tsv&quot;), read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;assembly_id&quot;) %&gt;% left_join(read_tsv(&quot;data/preprocessing.tsv&quot;),by=&quot;preprocessing_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sample.tsv&quot;),by=&quot;sample_id&quot;) %&gt;% dplyr::select(mag_id,mag_phylum,mag_completeness,mag_contamination,sample_type)%&gt;% unique() %&gt;% summarise(number=n(), swabs_n=n_distinct(mag_id[sample_type == &quot;Anal/cloacal swab&quot;], na.rm = TRUE), faeces_n=n_distinct(mag_id[sample_type == &quot;Faecal&quot;], na.rm = TRUE), phylums=n_distinct(mag_phylum), completeness=mean(mag_completeness), contamination=mean(mag_contamination)) %&gt;% tt() tinytable_vgliu6hrh3bza814agaf .table td.tinytable_css_12bdnqalxvh3jnix6v4r, .table th.tinytable_css_12bdnqalxvh3jnix6v4r { border-bottom: solid 0.1em #d3d8dc; } number swabs_n faeces_n phylums completeness contamination 51690 1896 47757 42 83.52126 2.000393 "],["laboratory-sample-processing.html", "4 Laboratory sample processing 4.1 DNA extraction 4.2 Sequencing library preparation 4.3 Data quality 4.4 Data duplication", " 4 Laboratory sample processing 4.1 DNA extraction 4.1.1 General statistics read_tsv(&quot;data/extraction.tsv&quot;) %&gt;% summarise( max= max(extraction_total, na.rm = TRUE), min= min(extraction_total, na.rm = TRUE), mean= mean(extraction_total, na.rm = TRUE), sd = sd(extraction_total, na.rm = TRUE), median=median(extraction_total, na.rm = TRUE), IQR=IQR(extraction_total, na.rm = TRUE) ) %&gt;% tt() tinytable_lru10dkh27kox0niyjwc .table td.tinytable_css_bqkwru3zmabmtwoo06rk, .table th.tinytable_css_bqkwru3zmabmtwoo06rk { border-bottom: solid 0.1em #d3d8dc; } max min mean sd median IQR 7110 0 365.683 677.4012 100.35 425.7 4.1.1.1 Data distribution 4.1.2 Sample types left_join(read_tsv(&quot;data/extraction.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% ggplot(aes(x=sample_type, y= extraction_total, fill=sample_type, color=sample_type)) + ylim(0, 2000) + geom_jitter(position = position_jitter(width = 0.2), alpha = 0.5, size=0.5) + stat_halfeye(adjust = 0.5,width = 0.5, .width = 0, justification = -.55,normalize = &quot;groups&quot;) + scale_color_manual(values = c(&quot;#bdca50&quot;, &quot;#AA3377&quot;)) + scale_fill_manual(values = c(&quot;#bdca5050&quot;, &quot;#AA337750&quot;)) + labs(y=&quot;Density&quot;,x=&quot;DNA yield&quot;, fill=&quot;Sample type&quot;, color=&quot;Sample type&quot;) + theme_classic() ggsave(&quot;figures/extraction_type.pdf&quot;,width=6, height=4, units=&quot;in&quot;) left_join(read_tsv(&quot;data/extraction.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(sample_type) %&gt;% summarise( mean= mean(extraction_total, na.rm = TRUE), sd = sd(extraction_total, na.rm = TRUE), median=median(extraction_total, na.rm = TRUE), IQR=IQR(extraction_total, na.rm = TRUE)) %&gt;% tt() tinytable_ht7qb3jhjagnr43nrets .table td.tinytable_css_b4l2r0b43c0g893af7b1, .table th.tinytable_css_b4l2r0b43c0g893af7b1 { border-bottom: solid 0.1em #d3d8dc; } sample_type mean sd median IQR Anal/cloacal swab 170.2285 362.7389 25.335 155.7743 Faecal 316.6666 423.6434 129.375 430.8075 4.1.3 Taxonomy left_join(read_tsv(&quot;data/extraction.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(aes(y=extraction_total,x=tax_group,color=tax_group,fill=tax_group)) + ylim(0, 2000) + geom_jitter(position = position_jitter(width = 0.2), alpha = 0.5, size=0.5) + stat_halfeye(adjust = 0.5,width = 0.5, .width = 0, justification = -.55,normalize = &quot;groups&quot;) + scale_color_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + labs(y=&quot;DNA yield&quot;,x=&quot;Taxonomic group&quot;, color=&quot;Sample type&quot;) + theme_classic() ggsave(&quot;figures/extraction_taxa.pdf&quot;,width=9, height=4, units=&quot;in&quot;) left_join(read_tsv(&quot;data/extraction.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(tax_group) %&gt;% summarise( mean= mean(extraction_total, na.rm = TRUE), sd = sd(extraction_total, na.rm = TRUE), median=median(extraction_total, na.rm = TRUE), IQR=IQR(extraction_total, na.rm = TRUE)) %&gt;% tt() tinytable_sbhtu1xxaoej9x51la37 .table td.tinytable_css_o27kx3acg14t8eetcfll, .table th.tinytable_css_o27kx3acg14t8eetcfll { border-bottom: solid 0.1em #d3d8dc; } tax_group mean sd median IQR Amphibians 233.35078 358.90219 128.250 137.2500 Bats 59.60574 92.00357 30.735 63.4950 Birds 74.43550 262.34517 7.380 27.3555 Mammals 463.93202 471.41487 321.975 563.6250 Reptiles 394.50619 437.86229 249.750 541.3500 4.1.3.1 Comparison left_join(read_tsv(&quot;data/extraction.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% dplyr::select(extraction_total,sample_type,tax_group) %&gt;% mutate(sample_type = factor(sample_type),tax_group=factor(tax_group)) %&gt;% lm(rank(extraction_total) ~ tax_group+sample_type,data=.) %&gt;% Anova(.,type=&quot;III&quot;)%&gt;% tidy()%&gt;% tt() tinytable_v79e7jbmldul7ha9ti8h .table td.tinytable_css_e3dlpuix9ggk4d9bawol, .table th.tinytable_css_e3dlpuix9ggk4d9bawol { border-bottom: solid 0.1em #d3d8dc; } term sumsq df statistic p.value (Intercept) 182499974 1 556.65758 2.404646e-111 tax_group 413589974 4 315.38086 4.198853e-220 sample_type 8154841 1 24.87373 6.538535e-07 Residuals 824213930 2514 NA NA left_join(read_tsv(&quot;data/extraction.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% dplyr::select(extraction_total,sample_type,tax_group) %&gt;% mutate(sample_type = factor(sample_type),tax_group=factor(tax_group)) %&gt;% lm(rank(extraction_total) ~ tax_group+sample_type,data=.) %&gt;% glht(.,linfct = mcp(tax_group = &quot;Tukey&quot;))%&gt;% summary()%&gt;% tidy()%&gt;% tt() tinytable_1w17vye0fm93hkmihgiu .table td.tinytable_css_o53ute7b324ogu0r6d2z, .table th.tinytable_css_o53ute7b324ogu0r6d2z { border-bottom: solid 0.1em #d3d8dc; } term contrast null.value estimate std.error statistic adj.p.value tax_group Bats - Amphibians 0 -559.4931 52.02136 -10.755065 0.000000e+00 tax_group Birds - Amphibians 0 -725.2098 53.12799 -13.650239 0.000000e+00 tax_group Mammals - Amphibians 0 311.3585 48.13741 6.468118 6.842447e-10 tax_group Reptiles - Amphibians 0 107.1624 49.38816 2.169799 1.847369e-01 tax_group Birds - Bats 0 -165.7167 41.15805 -4.026349 5.203709e-04 tax_group Mammals - Bats 0 870.8516 34.96158 24.908815 0.000000e+00 tax_group Reptiles - Bats 0 666.6555 36.79145 18.119849 0.000000e+00 tax_group Mammals - Birds 0 1036.5683 34.63845 29.925364 0.000000e+00 tax_group Reptiles - Birds 0 832.3722 38.06934 21.864631 0.000000e+00 tax_group Reptiles - Mammals 0 -204.1961 30.99605 -6.587811 2.616682e-10 4.2 Sequencing library preparation 4.2.1 Overall left_join(read_tsv(&quot;data/library.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(library_PCR_cycles_required &gt; 0) %&gt;% summarise( max= max(library_input_dna, na.rm = TRUE), min= min(library_input_dna, na.rm = TRUE), mean= mean(library_input_dna, na.rm = TRUE), sd = sd(library_input_dna, na.rm = TRUE), median=median(library_input_dna, na.rm = TRUE), IQR=IQR(library_input_dna, na.rm = TRUE)) %&gt;% tt() tinytable_mg5rbvu66jw8zfxej40e .table td.tinytable_css_hrlgg8oomphkp9asphgu, .table th.tinytable_css_hrlgg8oomphkp9asphgu { border-bottom: solid 0.1em #d3d8dc; } max min mean sd median IQR 552 0 89.34565 84.03881 57.6 180.006 left_join(read_tsv(&quot;data/library.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(library_PCR_cycles_required &gt; 0) %&gt;% summarise( max= max(library_PCR_cycles_required, na.rm = TRUE), min= min(library_PCR_cycles_required, na.rm = TRUE), mean= mean(library_PCR_cycles_required, na.rm = TRUE), sd = sd(library_PCR_cycles_required, na.rm = TRUE), median=median(library_PCR_cycles_required, na.rm = TRUE), IQR=IQR(library_PCR_cycles_required, na.rm = TRUE)) %&gt;% tt() tinytable_v7d5otodoi047owtcyys .table td.tinytable_css_bjx3ut2eplndc2rfm49v, .table th.tinytable_css_bjx3ut2eplndc2rfm49v { border-bottom: solid 0.1em #d3d8dc; } max min mean sd median IQR 33 2 9.150046 4.390537 8 6 left_join(read_tsv(&quot;data/library.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(library_PCR_cycles_required &gt; 0) %&gt;% filter(library_input_dna &gt; 0) %&gt;% mutate(library_PCR_cycles_required=round(library_PCR_cycles_required))%&gt;% glm(library_PCR_cycles_required ~ tax_group*log(library_input_dna)+sample_type*log(library_input_dna), data = .,family=poisson()) %&gt;% Anova(.,test.statistic=&quot;Wald&quot;) Analysis of Deviance Table (Type II tests) Response: library_PCR_cycles_required Df Chisq Pr(&gt;Chisq) tax_group 4 83.0304 &lt; 2.2e-16 *** log(library_input_dna) 1 782.5648 &lt; 2.2e-16 *** sample_type 1 27.0760 1.956e-07 *** tax_group:log(library_input_dna) 4 69.2767 3.226e-14 *** log(library_input_dna):sample_type 1 4.2027 0.04036 * --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 left_join(read_tsv(&quot;data/library.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(library_PCR_cycles_required &gt; 0) %&gt;% filter(library_input_dna &gt; 0) %&gt;% filter(library_input_dna &lt; 200) %&gt;% mutate(library_PCR_cycles_required=round(library_PCR_cycles_required))%&gt;% glm(library_PCR_cycles_required ~ tax_group*log(library_input_dna)+sample_type*log(library_input_dna), data = .,family=poisson()) %&gt;% plot_model(.,type=&quot;pred&quot;,terms=c(&quot;library_input_dna[1:200]&quot;,&quot;sample_type&quot;),show.data = TRUE,dot.size = 1,line.size = 1)+ scale_color_manual(values = c(&quot;#bdca50&quot;, &quot;#AA3377&quot;)) + scale_fill_manual(values = c(&quot;#bdca5050&quot;, &quot;#AA337750&quot;)) + labs(y=&quot;Required number of cycles&quot;,x=&quot;Amount of inputted DNA (ng)&quot;, color=&quot;Sample type&quot;) + theme_classic() ggsave(&quot;figures/cycles_type.pdf&quot;,width=6, height=3, units=&quot;in&quot;) left_join(read_tsv(&quot;data/library.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(library_PCR_cycles_required &gt; 0) %&gt;% filter(library_input_dna &gt; 0) %&gt;% filter(library_input_dna &lt; 200) %&gt;% mutate(library_PCR_cycles_required=round(library_PCR_cycles_required))%&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% glm(library_PCR_cycles_required ~ tax_group*log(library_input_dna)+sample_type*log(library_input_dna), data = .,family=poisson()) %&gt;% plot_model(.,type=&quot;pred&quot;,terms=c(&quot;library_input_dna [1:200]&quot;,&quot;tax_group&quot;),show.data = TRUE,dot.size = 1,line.size = 1)+ scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + labs(y=&quot;Required number of cycles&quot;,x=&quot;Amount of inputted DNA (ng)&quot;, color=&quot;Sample type&quot;, fill=&quot;Sample type&quot;) + labs(y=&quot;Required number of cycles&quot;,x=&quot;Amount of inputted DNA (ng)&quot;, color=&quot;Taxonomic group&quot;) + theme_classic() ggsave(&quot;figures/cycles_taxa.pdf&quot;,width=6, height=3, units=&quot;in&quot;) 4.3 Data quality left_join(read_tsv(&quot;data/preprocessing.tsv&quot;),read_tsv(&quot;data/sample.tsv&quot;),by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sequence.tsv&quot;),by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/index.tsv&quot;),by=&quot;index_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(lowqual_perc_reads=(1-reads_post_fastp/reads_pre_fastp)*100) %&gt;% mutate(lowqual_perc_bases=(1-bases_post_fastp/bases_pre_fastp)*100) %&gt;% #Plot map EE6677 &lt; bats ggplot(aes(y=lowqual_perc_bases, x=index_PCR_cycles_given, colour=sample_type, fill=sample_type, group=sample_type)) + geom_jitter(alpha=0.3) + stat_smooth(method = &quot;gam&quot;, formula = y ~ s(x, bs = &quot;ps&quot;,k=4),se=FALSE, geom = &quot;smooth&quot;, alpha=0.2) + scale_color_manual(values = c(&quot;#bdca50&quot;, &quot;#AA3377&quot;)) + scale_fill_manual(values = c(&quot;#bdca5080&quot;, &quot;#AA337780&quot;)) + scale_x_log10() + theme_classic() + theme(legend.position = &quot;bottom&quot;) left_join(read_tsv(&quot;data/preprocessing.tsv&quot;),read_tsv(&quot;data/sample.tsv&quot;),by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sequence.tsv&quot;),by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/index.tsv&quot;),by=&quot;index_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(lowqual_perc_reads=(1-reads_post_fastp/reads_pre_fastp)*100) %&gt;% mutate(lowqual_perc_bases=(1-bases_post_fastp/bases_pre_fastp)*100) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(aes(y=lowqual_perc_bases, x=index_PCR_cycles_given, colour=tax_group, fill=tax_group, group=tax_group)) + geom_jitter(alpha=0.3) + stat_smooth(method = &quot;gam&quot;, formula = y ~ s(x, bs = &quot;ps&quot;,k=4),se=FALSE, geom = &quot;smooth&quot;, alpha=0.2) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + scale_x_log10() + theme_classic() + theme(legend.position = &quot;bottom&quot;) 4.4 Data duplication left_join(read_tsv(&quot;data/preprocessing.tsv&quot;),read_tsv(&quot;data/sample.tsv&quot;),by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sequence.tsv&quot;),by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/index.tsv&quot;),by=&quot;index_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(lowqual_perc_reads=(1-reads_post_fastp/reads_pre_fastp)*100) %&gt;% mutate(lowqual_perc_bases=(1-bases_post_fastp/bases_pre_fastp)*100) %&gt;% #Plot map EE6677 &lt; bats ggplot(aes(y=host_duplicate_fraction, x=index_PCR_cycles_given, colour=sample_type, fill=sample_type, group=sample_type)) + geom_jitter(alpha=0.3) + stat_smooth(method = &quot;gam&quot;, formula = y ~ s(x, bs = &quot;ps&quot;,k=4),se=FALSE, geom = &quot;smooth&quot;, alpha=0.2) + scale_color_manual(values = c(&quot;#bdca50&quot;, &quot;#AA3377&quot;)) + scale_fill_manual(values = c(&quot;#bdca5080&quot;, &quot;#AA337780&quot;)) + scale_x_log10() + theme_classic() + theme(legend.position = &quot;bottom&quot;) left_join(read_tsv(&quot;data/preprocessing.tsv&quot;),read_tsv(&quot;data/sample.tsv&quot;),by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sequence.tsv&quot;),by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/index.tsv&quot;),by=&quot;index_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(lowqual_perc_reads=(1-reads_post_fastp/reads_pre_fastp)*100) %&gt;% mutate(lowqual_perc_bases=(1-bases_post_fastp/bases_pre_fastp)*100) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(aes(y=host_duplicate_fraction, x=index_PCR_cycles_given, colour=tax_group, fill=tax_group, group=tax_group)) + geom_jitter(alpha=0.3) + stat_smooth(method = &quot;gam&quot;, formula = y ~ s(x, bs = &quot;ps&quot;,k=4),se=FALSE, geom = &quot;smooth&quot;, alpha=0.2) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + scale_x_log10() + theme_classic() + theme(legend.position = &quot;bottom&quot;) "],["host-genomics.html", "5 Host genomics 5.1 Host DNA fraction 5.2 Genome depth", " 5 Host genomics 5.1 Host DNA fraction 5.1.1 Data overview left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(host_percentage= host_bases/bases_post_fastp*100) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(sample_type) %&gt;% summarise(mean=mean(host_percentage, na.rm=T), sd=sd(host_percentage, na.rm=T), median=median(host_percentage, na.rm = TRUE), IQR=IQR(host_percentage, na.rm = TRUE)) %&gt;% tt() tinytable_4gxq5vld5hy28cgrdrm9 .table td.tinytable_css_h0126dejl686hzkxxxzn, .table th.tinytable_css_h0126dejl686hzkxxxzn { border-bottom: solid 0.1em #d3d8dc; } sample_type mean sd median IQR Anal/cloacal swab 75.76413 32.05899 89.31666 36.46366 Faecal 22.94532 32.09473 6.09630 31.88080 left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(host_percentage= host_bases/bases_post_fastp*100) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(tax_group) %&gt;% summarise(mean=mean(host_percentage, na.rm=T), sd=sd(host_percentage, na.rm=T), median=median(host_percentage, na.rm = TRUE), IQR=IQR(host_percentage, na.rm = TRUE)) %&gt;% tt() tinytable_ms349pceuf2r86mbudm3 .table td.tinytable_css_huvvdvoo5uqda1e11vvr, .table th.tinytable_css_huvvdvoo5uqda1e11vvr { border-bottom: solid 0.1em #d3d8dc; } tax_group mean sd median IQR Amphibians 0.2968512 1.367301 0.02128969 0.05763236 Bats 49.4004705 37.779131 41.34831756 86.63187989 Birds 58.5039633 38.603463 70.50510687 81.48351233 Mammals 29.5029544 36.464343 8.99683115 50.10072047 Reptiles 12.4971018 22.008872 3.48495016 10.58589423 5.1.2 Statistical test left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(host_percentage= host_bases/bases_post_fastp*100) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% glm(cbind(host_bases,bases_post_fastp) ~ sample_type + tax_group, data = .,family=quasibinomial) %&gt;% Anova(.,test=&quot;F&quot;,type=&quot;III&quot;) %&gt;% tidy()%&gt;% tt() tinytable_0cuem1xwgg216u5d9ybd .table td.tinytable_css_xjz1lsw9z0qr9q094fi7, .table th.tinytable_css_xjz1lsw9z0qr9q094fi7 { border-bottom: solid 0.1em #d3d8dc; } term sumsq df F.values p.value sample_type 4.573093e+11 1 508.6208 1.241797e-100 tax_group 8.316384e+11 4 231.2377 1.420289e-163 Residuals 1.815316e+12 2019 NA NA left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(sample_type = factor(sample_type),tax_group=factor(tax_group)) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% glm(cbind(host_bases,bases_post_fastp) ~ sample_type + tax_group, data = .,family=quasibinomial) %&gt;% glht(.,linfct = mcp(tax_group = &quot;Tukey&quot;))%&gt;% summary()%&gt;% tidy()%&gt;% tt() tinytable_gtmskbt1uvzastpa8p0v .table td.tinytable_css_7939ypz4d9p330maq6dq, .table th.tinytable_css_7939ypz4d9p330maq6dq { border-bottom: solid 0.1em #d3d8dc; } term contrast null.value estimate std.error statistic adj.p.value tax_group Bats - Amphibians 0 5.1412163 0.68642282 7.489868 2.610134e-13 tax_group Birds - Amphibians 0 4.9599164 0.68662378 7.223630 1.612377e-12 tax_group Mammals - Amphibians 0 4.4582788 0.68642685 6.494907 4.741316e-10 tax_group Reptiles - Amphibians 0 3.6999420 0.68797728 5.378000 5.695632e-07 tax_group Birds - Bats 0 -0.1812999 0.05728337 -3.164966 9.839081e-03 tax_group Mammals - Bats 0 -0.6829374 0.05466064 -12.494135 0.000000e+00 tax_group Reptiles - Bats 0 -1.4412742 0.07106532 -20.280979 0.000000e+00 tax_group Mammals - Birds 0 -0.5016376 0.05073241 -9.887911 0.000000e+00 tax_group Reptiles - Birds 0 -1.2599743 0.07254355 -17.368522 0.000000e+00 tax_group Reptiles - Mammals 0 -0.7583368 0.07074971 -10.718585 0.000000e+00 5.1.3 Plot left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(host_percentage= host_bases/bases_post_fastp*100) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(., aes(y=host_percentage, x=tax_group, color=tax_group, fill=tax_group, group=tax_group)) + geom_jitter(alpha = 0.2, width=0.3) + geom_boxplot(outlier.shape = NA) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + theme_classic() + facet_grid(~sample_type) + labs(y=&quot;Host percentage&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/hostdata_taxa.pdf&quot;,width=9, height=4, units=&quot;in&quot;) left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(host_percentage= host_bases/bases_post_fastp*100) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(., aes(y=host_percentage, x=sample_type, group=sample_type)) + stat_halfeye(adjust = 1, width = 0.5, .width = 0, justification = 0,normalize = &quot;groups&quot;) + theme_classic() + labs(y=&quot;Host percentage&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/hostdata_taxa_all.pdf&quot;,width=9, height=4, units=&quot;in&quot;) 5.2 Genome depth 5.2.1 Data overview left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/reference.tsv&quot;),by=&quot;reference_id&quot;) %&gt;% mutate(depth=host_bases/(reference_size*1000000)) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(sample_type) %&gt;% summarise(mean=mean(depth, na.rm=T), sd=sd(depth, na.rm=T), median=median(depth, na.rm = TRUE), IQR=IQR(depth, na.rm = TRUE)) %&gt;% tt() tinytable_v3e77tjzybbuz0fwic71 .table td.tinytable_css_mo8jzcna7a72bhmhdbuk, .table th.tinytable_css_mo8jzcna7a72bhmhdbuk { border-bottom: solid 0.1em #d3d8dc; } sample_type mean sd median IQR Anal/cloacal swab 2.4220586 2.079382 1.9656642 1.9114049 Faecal 0.6573435 1.628490 0.1301568 0.6486201 left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/reference.tsv&quot;),by=&quot;reference_id&quot;) %&gt;% mutate(depth=host_bases/(reference_size*1000000)) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(tax_group) %&gt;% summarise(mean=mean(depth, na.rm=T), sd=sd(depth, na.rm=T), median=median(depth, na.rm = TRUE), IQR=IQR(depth, na.rm = TRUE)) %&gt;% tt() tinytable_g7vbbqqrz91tlisfut6d .table td.tinytable_css_q9tydylth9qv2tdba037, .table th.tinytable_css_q9tydylth9qv2tdba037 { border-bottom: solid 0.1em #d3d8dc; } tax_group mean sd median IQR Amphibians 0.001921062 0.01314311 0.0000433766 0.0001050921 Bats 1.246383229 1.39021316 0.9629904655 1.6487318021 Birds 2.478493853 3.08305053 1.9449031457 2.7817309257 Mammals 0.595230910 1.27474674 0.1327805697 0.6743426328 Reptiles 0.345241814 0.60682463 0.1076937456 0.3145671900 5.2.2 Statistical test left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/reference.tsv&quot;),by=&quot;reference_id&quot;) %&gt;% mutate(depth=host_bases/(reference_size*1000000)) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% lm(rank(depth) ~ sample_type + tax_group, data = .) %&gt;% Anova(type = &quot;III&quot;) %&gt;% tidy()%&gt;% tt() tinytable_sqpcksjphtkewdnujflc .table td.tinytable_css_jufc1jcj5ypm60c9g0rh, .table th.tinytable_css_jufc1jcj5ypm60c9g0rh { border-bottom: solid 0.1em #d3d8dc; } term sumsq df statistic p.value (Intercept) 45259288 1 255.3583 2.982539e-54 sample_type 75036348 1 423.3640 1.215557e-85 tax_group 208078989 4 293.5016 1.475300e-199 Residuals 361920741 2042 NA NA left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/reference.tsv&quot;),by=&quot;reference_id&quot;) %&gt;% mutate(depth=host_bases/(reference_size*1000000)) %&gt;% #convert bases to gigabases (GB) mutate(sample_type = factor(sample_type),tax_group=factor(tax_group)) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% lm(rank(depth) ~ sample_type + tax_group, data = .) %&gt;% glht(.,linfct = mcp(tax_group = &quot;Tukey&quot;))%&gt;% summary()%&gt;% tidy()%&gt;% tt() tinytable_tzoqwkib4cd9uhak16jn .table td.tinytable_css_939s5i321dvjnollp8r4, .table th.tinytable_css_939s5i321dvjnollp8r4 { border-bottom: solid 0.1em #d3d8dc; } term contrast null.value estimate std.error statistic adj.p.value tax_group Bats - Amphibians 0 1208.81726 39.35163 30.718356 0.0000000 tax_group Birds - Amphibians 0 1131.10292 41.03771 27.562527 0.0000000 tax_group Mammals - Amphibians 0 717.21446 36.74653 19.517881 0.0000000 tax_group Reptiles - Amphibians 0 744.78843 37.68408 19.764006 0.0000000 tax_group Birds - Bats 0 -77.71434 33.53182 -2.317630 0.1353206 tax_group Mammals - Bats 0 -491.60281 27.93331 -17.599160 0.0000000 tax_group Reptiles - Bats 0 -464.02884 29.08689 -15.953197 0.0000000 tax_group Mammals - Birds 0 -413.88846 28.68250 -14.429998 0.0000000 tax_group Reptiles - Birds 0 -386.31450 31.32238 -12.333498 0.0000000 tax_group Reptiles - Mammals 0 27.57397 25.44895 1.083501 0.8102497 5.2.3 Plot left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/reference.tsv&quot;),by=&quot;reference_id&quot;) %&gt;% mutate(depth=host_bases/(reference_size*1000000)) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(., aes(y=depth, x=sample_type, color=sample_type, fill=sample_type, group=sample_type)) + ylim(0,10)+ geom_boxplot(outlier.shape = NA) + scale_color_manual(values = c(&quot;#bdca50&quot;, &quot;#AA3377&quot;)) + scale_fill_manual(values = c(&quot;#bdca5080&quot;, &quot;#AA337780&quot;)) + theme_classic() + labs(y=&quot;Host depth of coverage&quot;, color=&quot;Sample type&quot;, fill=&quot;Sample type&quot;) + theme_classic() ggsave(&quot;figures/hostdepth_type.pdf&quot;,width=5, height=4, units=&quot;in&quot;) "],["microbial-metagenomics.html", "6 Microbial metagenomics 6.1 Microbial DNA fraction 6.2 Domain-adjusted mapping rate 6.3 Assemblies 6.4 Number of MAGs 6.5 MAG quality 6.6 Assemblies vs MAGs", " 6 Microbial metagenomics 6.1 Microbial DNA fraction 6.1.1 Data overview left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(sample_type) %&gt;% summarise(mean=mean(singlem_fraction, na.rm=T), sd=sd(singlem_fraction, na.rm=T), median=median(singlem_fraction, na.rm = TRUE), IQR=IQR(singlem_fraction, na.rm = TRUE)) %&gt;% tt() tinytable_tf775bqva3a1jewbw7tn .table td.tinytable_css_ays74726t1oi5zzx6v1c, .table th.tinytable_css_ays74726t1oi5zzx6v1c { border-bottom: solid 0.1em #d3d8dc; } sample_type mean sd median IQR Anal/cloacal swab 0.2598510 0.3407707 0.0022 0.574700 Faecal 0.5203527 0.2759433 0.6270 0.350875 left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(tax_group) %&gt;% summarise(mean=mean(singlem_fraction, na.rm=T), sd=sd(singlem_fraction, na.rm=T), median=median(singlem_fraction, na.rm = TRUE), IQR=IQR(singlem_fraction, na.rm = TRUE)) %&gt;% tt() tinytable_sveyeg44o64nnzq21hcn .table td.tinytable_css_m74yok1bhfb2xparp6sz, .table th.tinytable_css_m74yok1bhfb2xparp6sz { border-bottom: solid 0.1em #d3d8dc; } tax_group mean sd median IQR Amphibians 0.5807892 0.1799217 0.62900 0.128200 Bats 0.2903304 0.2949997 0.20650 0.523400 Birds 0.2777113 0.3360460 0.07850 0.556025 Mammals 0.5871579 0.2841097 0.67420 0.175250 Reptiles 0.5885336 0.1701545 0.63475 0.114050 6.1.2 Statistical test left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(!is.na(singlem_fraction))%&gt;% mutate(singlem_fraction=case_when(singlem_fraction&gt;1~1, singlem_fraction&lt;=1~singlem_fraction))%&gt;% glm(singlem_fraction ~ tax_group + sample_type, data = .,family=quasibinomial) %&gt;% Anova(.,test.statistic = &quot;F&quot;,type = &quot;III&quot;) %&gt;% tidy()%&gt;% tt() tinytable_67dtwep878yway81cx60 .table td.tinytable_css_v69wqcz4reyd6ys4vfu2, .table th.tinytable_css_v69wqcz4reyd6ys4vfu2 { border-bottom: solid 0.1em #d3d8dc; } term sumsq df F.values p.value tax_group 148.8863 4 119.1247 2.466079e-91 sample_type 51.7346 1 165.5725 1.784789e-36 Residuals 630.8543 2019 NA NA left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(!is.na(singlem_fraction))%&gt;% mutate(singlem_fraction=case_when(singlem_fraction&gt;1~1, singlem_fraction&lt;=1~singlem_fraction), sample_type=factor(sample_type), tax_group=factor(tax_group))%&gt;% glm(singlem_fraction ~ tax_group + sample_type, data = .,family=quasibinomial) %&gt;% glht(.,linfct = mcp(tax_group = &quot;Tukey&quot;))%&gt;% summary()%&gt;% tidy()%&gt;% tt() tinytable_nc4sam9strsvr4rgfgb6 .table td.tinytable_css_0npbc2x9urilowrvspl0, .table th.tinytable_css_0npbc2x9urilowrvspl0 { border-bottom: solid 0.1em #d3d8dc; } term contrast null.value estimate std.error statistic adj.p.value tax_group Bats - Amphibians 0 -1.25097357 0.10967066 -11.4066383 0.000000e+00 tax_group Birds - Amphibians 0 -0.88809563 0.11334382 -7.8354131 2.131628e-14 tax_group Mammals - Amphibians 0 0.16650972 0.10026122 1.6607589 4.507172e-01 tax_group Reptiles - Amphibians 0 0.03298124 0.10207377 0.3231118 9.975621e-01 tax_group Birds - Bats 0 0.36287794 0.09724522 3.7315759 1.884568e-03 tax_group Mammals - Bats 0 1.41748328 0.08113495 17.4706869 0.000000e+00 tax_group Reptiles - Bats 0 1.28395481 0.08304328 15.4612727 0.000000e+00 tax_group Mammals - Birds 0 1.05460535 0.08202966 12.8563901 0.000000e+00 tax_group Reptiles - Birds 0 0.92107687 0.08779908 10.4907351 0.000000e+00 tax_group Reptiles - Mammals 0 -0.13352848 0.07012718 -1.9040901 3.082301e-01 6.1.3 Plot left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(host_percentage= host_bases/bases_post_fastp*100) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(aes(y=singlem_fraction, x=tax_group, color=tax_group, fill=tax_group, group=tax_group)) + ylim(0, 1) + geom_jitter(position = position_jitter(width = 0.2), alpha = 0.5, size=0.5) + stat_halfeye(adjust = 0.5,width = 0.5, .width = 0, justification = -.55,normalize = &quot;groups&quot;) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + theme_classic() + facet_grid(~sample_type) + labs(y=&quot;Host percentage&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/microbialdata_taxa.pdf&quot;,width=9, height=4, units=&quot;in&quot;) left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(host_percentage= host_bases/bases_post_fastp*100) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(aes(y=singlem_fraction, x=sample_type, group=sample_type)) + stat_halfeye(adjust = 1, width = 0.5, .width = 0, justification = 0,normalize = &quot;groups&quot;) + theme_classic() + labs(y=&quot;Host percentage&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/microbialdata_taxa_all.pdf&quot;,width=9, height=4, units=&quot;in&quot;) 6.2 Domain-adjusted mapping rate 6.2.1 Data summary left_join(read_tsv(&quot;data/mapping.tsv&quot;), read_tsv(&quot;data/preprocessing.tsv&quot;), by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(singlem_fraction=ifelse(singlem_fraction&gt;1,100,singlem_fraction*100)) %&gt;% mutate(damr=ifelse(singlem_fraction&lt;mapping_percentage,100,(mapping_percentage/singlem_fraction)*100)) %&gt;% filter(singlem_fraction&gt;0) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(sample_type) %&gt;% summarise(mean=mean(damr, na.rm=T), sd=sd(damr, na.rm=T), median=median(damr, na.rm = TRUE), IQR=IQR(damr, na.rm = TRUE)) %&gt;% tt() tinytable_ad95sn3f2m9h3xg92cv3 .table td.tinytable_css_z40o8k8pcx3eqdyba0gi, .table th.tinytable_css_z40o8k8pcx3eqdyba0gi { border-bottom: solid 0.1em #d3d8dc; } sample_type mean sd median IQR Anal/cloacal swab 72.84533 22.25244 76.29903 30.61081 Faecal 86.58154 25.00932 100.00000 15.61039 left_join(read_tsv(&quot;data/mapping.tsv&quot;), read_tsv(&quot;data/preprocessing.tsv&quot;), by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(singlem_fraction=ifelse(singlem_fraction&gt;1,100,singlem_fraction*100)) %&gt;% mutate(damr=ifelse(singlem_fraction&lt;mapping_percentage,100,(mapping_percentage/singlem_fraction)*100)) %&gt;% filter(singlem_fraction&gt;0) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(tax_group) %&gt;% summarise(mean=mean(damr, na.rm=T), sd=sd(damr, na.rm=T), median=median(damr, na.rm = TRUE), IQR=IQR(damr, na.rm = TRUE)) %&gt;% tt() tinytable_ysulhkotxnia2zqa2ith .table td.tinytable_css_jybogfk6yvrvsyd3k9tl, .table th.tinytable_css_jybogfk6yvrvsyd3k9tl { border-bottom: solid 0.1em #d3d8dc; } tax_group mean sd median IQR Amphibians 89.19356 24.84575 100.00000 5.927094 Bats 80.94051 24.67483 91.76713 30.814236 Birds 67.03815 24.99000 72.18568 29.811183 Mammals 91.06092 16.77450 100.00000 11.191039 Reptiles 84.52325 31.14150 100.00000 10.748612 6.2.2 Statistical test left_join(read_tsv(&quot;data/mapping.tsv&quot;), read_tsv(&quot;data/preprocessing.tsv&quot;), by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(singlem_fraction=ifelse(singlem_fraction&gt;1,11,singlem_fraction)) %&gt;% mutate(damr=ifelse(singlem_fraction&lt;mapping_percentage,1,mapping_percentage/singlem_fraction)) %&gt;% filter(singlem_fraction&gt;0) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(!is.na(damr)) %&gt;% glm(damr ~ sample_type + tax_group, data = .,family=quasibinomial) %&gt;% Anova(test.statistic = &quot;F&quot;,type=&quot;III&quot;) %&gt;% tidy()%&gt;% tt() tinytable_jk0jt97q9809f3j0hutw .table td.tinytable_css_mvfg30z5hvdm12bwo97h, .table th.tinytable_css_mvfg30z5hvdm12bwo97h { border-bottom: solid 0.1em #d3d8dc; } term sumsq df F.values p.value sample_type 13.49334 1 19.83706 8.794973e-06 tax_group 76.64409 4 28.16933 6.244313e-23 Residuals 1742.01471 2561 NA NA left_join(read_tsv(&quot;data/mapping.tsv&quot;), read_tsv(&quot;data/preprocessing.tsv&quot;), by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(singlem_fraction=ifelse(singlem_fraction&gt;1,11,singlem_fraction)) %&gt;% mutate(damr=ifelse(singlem_fraction&lt;mapping_percentage,1,mapping_percentage/singlem_fraction)) %&gt;% filter(singlem_fraction&gt;0) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(!is.na(damr)) %&gt;% mutate(sample_type=factor(sample_type), tax_group=factor(tax_group))%&gt;% glm(damr ~ sample_type + tax_group, data = .,family=quasibinomial) %&gt;% glht(.,linfct = mcp(tax_group = &quot;Tukey&quot;))%&gt;% summary()%&gt;% tidy()%&gt;% tt() tinytable_q1ycocu0z24chvb0sltx .table td.tinytable_css_56cj8zjzxm3qxb534u31, .table th.tinytable_css_56cj8zjzxm3qxb534u31 { border-bottom: solid 0.1em #d3d8dc; } term contrast null.value estimate std.error statistic adj.p.value tax_group Bats - Amphibians 0 -1.5736540 1.1220474 -1.4024844 5.926804e-01 tax_group Birds - Amphibians 0 -2.7097758 1.0700747 -2.5323240 7.211060e-02 tax_group Mammals - Amphibians 0 0.3210380 1.1686087 0.2747181 9.985217e-01 tax_group Reptiles - Amphibians 0 -3.2127466 1.0255111 -3.1328247 1.257651e-02 tax_group Birds - Bats 0 -1.1361218 0.5793468 -1.9610391 2.562729e-01 tax_group Mammals - Bats 0 1.8946920 0.7458078 2.5404560 7.058680e-02 tax_group Reptiles - Bats 0 -1.6390926 0.4921951 -3.3301684 6.500154e-03 tax_group Mammals - Birds 0 3.0308138 0.6650554 4.5572350 4.222758e-05 tax_group Reptiles - Birds 0 -0.5029708 0.3582254 -1.4040625 5.916447e-01 tax_group Reptiles - Mammals 0 -3.5337846 0.5906877 -5.9824922 1.667799e-08 6.2.3 Plot left_join(read_tsv(&quot;data/mapping.tsv&quot;), read_tsv(&quot;data/preprocessing.tsv&quot;), by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(singlem_fraction=ifelse(singlem_fraction&gt;1,100,singlem_fraction*100)) %&gt;% mutate(damr=ifelse(singlem_fraction&lt;mapping_percentage,100,(mapping_percentage/singlem_fraction)*100)) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(singlem_fraction&gt;0) %&gt;% ggplot(aes(y=damr, x=sample_type, color=sample_type, fill=sample_type, group=sample_type)) + geom_boxplot(outlier.shape = NA) + scale_color_manual(values = c(&quot;#bdca50&quot;, &quot;#AA3377&quot;)) + scale_fill_manual(values = c(&quot;#bdca5080&quot;, &quot;#AA337780&quot;)) + theme_classic() + labs(y=&quot;DAMR&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/damr_type.pdf&quot;,width=5, height=4, units=&quot;in&quot;) left_join(read_tsv(&quot;data/mapping.tsv&quot;), read_tsv(&quot;data/preprocessing.tsv&quot;), by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(singlem_fraction=ifelse(singlem_fraction&gt;1,100,singlem_fraction*100)) %&gt;% mutate(damr=ifelse(singlem_fraction&lt;mapping_percentage,100,(mapping_percentage/singlem_fraction)*100)) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(singlem_fraction&gt;0) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(aes(y=damr, x=tax_group, color=tax_group, fill=tax_group, group=tax_group)) + geom_jitter(position = position_jitter(width = 0.2), alpha = 0.5, size=0.5) + stat_halfeye(adjust = 0.5,width = 0.5, .width = 0, justification = -.55,normalize = &quot;groups&quot;) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + theme_classic() + labs(y=&quot;DAMR&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/damr_taxa.pdf&quot;,width=9, height=4, units=&quot;in&quot;) 6.3 Assemblies 6.3.1 Data summary left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% group_by(sample_type) %&gt;% summarise(mean=mean(assembly_length, na.rm=T), sd=sd(assembly_length, na.rm=T), median=median(assembly_length, na.rm = TRUE), IQR=IQR(assembly_length, na.rm = TRUE)) %&gt;% tt() tinytable_95apjn1fwqh76nxzseaw .table td.tinytable_css_u24psbhldumb9dmdqlrc, .table th.tinytable_css_u24psbhldumb9dmdqlrc { border-bottom: solid 0.1em #d3d8dc; } sample_type mean sd median IQR Anal/cloacal swab 13208042 34504175 0 0 Faecal 95955306 83010036 97047664 151385731 left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% group_by(tax_group) %&gt;% summarise(mean=mean(assembly_length, na.rm=T), sd=sd(assembly_length, na.rm=T), median=median(assembly_length, na.rm = TRUE), IQR=IQR(assembly_length, na.rm = TRUE)) %&gt;% tt() tinytable_wd9hkty6c84tjx5ar0i8 .table td.tinytable_css_73z6f0ny5zk0x8cs0tr6, .table th.tinytable_css_73z6f0ny5zk0x8cs0tr6 { border-bottom: solid 0.1em #d3d8dc; } tax_group mean sd median IQR Amphibians 116614689 68762523 121907456 88263039 Bats 31069176 77144825 0 41984504 Birds 8688016 26409919 0 0 Mammals 96415766 69841084 98624268 75754888 Reptiles 139349280 74190452 143970512 93046444 6.3.2 Statistical test left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% lm(rank(assembly_length) ~ sample_type + tax_group, data = .) %&gt;% Anova(type=&quot;III&quot;) %&gt;% tidy()%&gt;% tt() tinytable_1w85vvi9ec33abg905m8 .table td.tinytable_css_8crvy41f8z77g011j9gf, .table th.tinytable_css_8crvy41f8z77g011j9gf { border-bottom: solid 0.1em #d3d8dc; } term sumsq df statistic p.value (Intercept) 33267819 1 314.2467 3.650912e-64 sample_type 13028568 1 123.0674 1.427942e-27 tax_group 100440135 4 237.1885 5.790079e-159 Residuals 163985333 1549 NA NA 6.3.3 Plot left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(aes(y=assembly_length, x=tax_group, color=tax_group, fill=tax_group, group=tax_group)) + ylim(0,400000000)+ geom_jitter(alpha = 0.3, width=0.3, size=0.5) + geom_violin() + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + theme_classic() + facet_grid(~sample_type, scale=&quot;free&quot;) + labs(y=&quot;Assembly size&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/assemblysize_taxa.pdf&quot;,width=9, height=4, units=&quot;in&quot;) left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% ggplot(aes(y=assembly_length, x=sample_type, group=sample_type)) + ylim(0,400000000)+ stat_halfeye(adjust = 1, width = 0.5, .width = 0, justification = 0,normalize = &quot;groups&quot;) + theme_classic() + labs(y=&quot;Assembly size&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/assemblysize_taxa_all.pdf&quot;,width=9, height=4, units=&quot;in&quot;) 6.4 Number of MAGs 6.4.1 Summary statistics left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% group_by(sample_type) %&gt;% summarise(mean=mean(assembly_num_bins, na.rm=T), sd=sd(assembly_num_bins, na.rm=T), median=median(assembly_num_bins, na.rm = TRUE), IQR=IQR(assembly_num_bins, na.rm = TRUE)) %&gt;% tt() tinytable_q9qaojqkg65ckwn08407 .table td.tinytable_css_nbtydqvx2wlf0mprzg2k, .table th.tinytable_css_nbtydqvx2wlf0mprzg2k { border-bottom: solid 0.1em #d3d8dc; } sample_type mean sd median IQR Anal/cloacal swab 2.644068 6.971768 0 0 Faecal 18.386792 16.099835 19 29 left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% group_by(tax_group) %&gt;% summarise(mean=mean(assembly_num_bins, na.rm=T), sd=sd(assembly_num_bins, na.rm=T), median=median(assembly_num_bins, na.rm = TRUE), IQR=IQR(assembly_num_bins, na.rm = TRUE)) %&gt;% tt() tinytable_rdl9665mnnmmn5vqyjnu .table td.tinytable_css_g62yu15bn8d3w4cl47ap, .table th.tinytable_css_g62yu15bn8d3w4cl47ap { border-bottom: solid 0.1em #d3d8dc; } tax_group mean sd median IQR Amphibians 23.758389 14.944334 24 18 Bats 3.692308 7.451098 0 5 Birds 1.582979 5.600340 0 0 Mammals 22.062635 16.345908 23 19 Reptiles 23.924107 13.736366 24 18 6.4.2 Statistical test left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% glm(assembly_num_bins ~ sample_type + tax_group, data = .,family=quasipoisson) %&gt;% Anova(test.statistic = &quot;F&quot;,type = &quot;III&quot;) %&gt;% tidy()%&gt;% tt() tinytable_s424hg5xif1tmyw9t6sp .table td.tinytable_css_d7afnx0xm30iafi4w2t9, .table th.tinytable_css_d7afnx0xm30iafi4w2t9 { border-bottom: solid 0.1em #d3d8dc; } term sumsq df F.values p.value sample_type 1781.293 1 131.4547 2.875375e-29 tax_group 9870.795 4 182.1096 5.599140e-128 Residuals 20989.917 1549 NA NA left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% mutate(sample_type=factor(sample_type), tax_group=factor(tax_group))%&gt;% glm(assembly_num_bins ~ sample_type + tax_group, data = .,family=quasipoisson) %&gt;% glht(.,linfct = mcp(tax_group = &quot;Tukey&quot;))%&gt;% summary()%&gt;% tidy()%&gt;% tt() tinytable_osmz374on0cqf3pxbmeh .table td.tinytable_css_sznsehlf4r0imy2rbi6v, .table th.tinytable_css_sznsehlf4r0imy2rbi6v { border-bottom: solid 0.1em #d3d8dc; } term contrast null.value estimate std.error statistic adj.p.value tax_group Bats - Amphibians 0 -1.89252007 0.13396130 -14.12736443 0.0000000 tax_group Birds - Amphibians 0 -2.37578946 0.20160147 -11.78458429 0.0000000 tax_group Mammals - Amphibians 0 -0.02494121 0.07183869 -0.34718348 0.9962961 tax_group Reptiles - Amphibians 0 -0.00222888 0.07136120 -0.03123378 0.9999997 tax_group Birds - Bats 0 -0.48326938 0.22581601 -2.14010238 0.1759741 tax_group Mammals - Bats 0 1.86757887 0.12433118 15.02100124 0.0000000 tax_group Reptiles - Bats 0 1.89029119 0.12401954 15.24188255 0.0000000 tax_group Mammals - Birds 0 2.35084825 0.19506107 12.05185782 0.0000000 tax_group Reptiles - Birds 0 2.37356058 0.19518653 12.16047329 0.0000000 tax_group Reptiles - Mammals 0 0.02271233 0.05098722 0.44545131 0.9903558 6.4.3 Plot left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(aes(y=assembly_num_bins, x=tax_group, color=tax_group, fill=tax_group, group=tax_group)) + ylim(0,100) + geom_jitter(alpha = 0.6, width=0.3, size=0.5) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + theme_classic() + facet_grid(~sample_type, scale=&quot;free&quot;) + labs(y=&quot;Number of MAGs&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/numberofbins_taxa.pdf&quot;,width=9, height=4, units=&quot;in&quot;) left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% ggplot(aes(y=assembly_num_bins, x=sample_type, group=sample_type)) + ylim(0,100) + stat_halfeye(adjust = 1, width = 0.5, .width = 0, justification = 0,normalize = &quot;groups&quot;) + theme_classic() + labs(y=&quot;Number of MAGs&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/numberofbins_taxa_all.pdf&quot;,width=9, height=4, units=&quot;in&quot;) 6.5 MAG quality left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% left_join(read_tsv(&quot;data/mag.tsv&quot;), by=&quot;assembly_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% ggplot(aes(y=mag_completeness, x=tax_group, color=tax_group, fill=tax_group, group=tax_group)) + ylim(50,100) + #geom_jitter(position = position_jitter(width = 0.2), alpha = 0.5, size=0.5) + stat_halfeye(adjust = 0.5, width = 0.5, .width = 0,normalize = &quot;groups&quot;) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + theme_classic() + labs(y=&quot;Number of bins&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/completeness_taxa.pdf&quot;,width=5, height=4, units=&quot;in&quot;) left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% left_join(read_tsv(&quot;data/mag.tsv&quot;), by=&quot;assembly_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% ggplot(aes(y=mag_contamination, x=tax_group, color=tax_group, fill=tax_group, group=tax_group)) + ylim(0,10) + #geom_jitter(position = position_jitter(width = 0.2), alpha = 0.5, size=0.5) + stat_halfeye(adjust = 0.5, width = 0.5, .width = 0,normalize = &quot;groups&quot;) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + theme_classic() + labs(y=&quot;Number of bins&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/contamination_taxa.pdf&quot;,width=5, height=4, units=&quot;in&quot;) 6.6 Assemblies vs MAGs left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% left_join(read_tsv(&quot;data/mag.tsv&quot;), by=&quot;assembly_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;)%&gt;% with(cor(assembly_num_bins,assembly_length)) [1] 0.8511555 left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% left_join(read_tsv(&quot;data/mag.tsv&quot;), by=&quot;assembly_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% ggplot(aes(y=assembly_num_bins, x=assembly_length, color=tax_group)) + geom_point(alpha=0.5, size=0.5) + scale_color_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + geom_smooth(method=&quot;lm&quot;,se=FALSE)+ theme_classic() + labs(y=&quot;Number of bins&quot;, x=&quot;Assembly length&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) "],["overall-ordination.html", "7 Overall ordination 7.1 Sample types 7.2 Taxonomic groups", " 7 Overall ordination multi_variable &lt;- left_join(read_tsv(&quot;data/extraction.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% left_join(read_tsv(&quot;data/library.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% dplyr::select(sample_id, tax_group,specimen_species, sample_type, extraction_total, library_PCR_cycles_required, singlem_fraction, host_duplicate_fraction, assembly_length, assembly_num_bins) multi &lt;- multi_variable %&gt;% dplyr::select(-c(tax_group,specimen_species,sample_type)) %&gt;% group_by(sample_id) %&gt;% slice_tail(n = 1) %&gt;% column_to_rownames(var=&quot;sample_id&quot;) multi_dis &lt;- multi_variable %&gt;% dplyr::select(-c(tax_group,specimen_species,sample_type)) %&gt;% group_by(sample_id) %&gt;% slice_tail(n = 1) %&gt;% column_to_rownames(var=&quot;sample_id&quot;) %&gt;% daisy(., metric = c(&quot;gower&quot;)) multi_pcoa &lt;- cmdscale(multi_dis) species_loadings&lt;-scores(envfit(ord=data.frame(scores(multi_pcoa)),env=data.frame(multi),na.rm = TRUE),&quot;vectors&quot;)%&gt;% as.data.frame()%&gt;% rownames_to_column(.,var=&quot;variables&quot;) species_loadings_rescaled&lt;-species_loadings %&gt;% mutate(Dim1_normalized=decostand(Dim1,method=&quot;range&quot;), Dim2_normalized=decostand(Dim2,method=&quot;range&quot;))%&gt;% mutate(Dim1_rescaled=Dim1_normalized * (max(scores(multi_pcoa)[,1]) - min(scores(multi_pcoa)[,1])) + min(scores(multi_pcoa)[,1]), Dim2_rescaled=Dim2_normalized * (max(scores(multi_pcoa)[,2]) - min(scores(multi_pcoa)[,2])) + min(scores(multi_pcoa)[,2])) 7.1 Sample types multi_pcoa %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample_id&quot;) %&gt;% dplyr::left_join(read_tsv(&quot;data/sample.tsv&quot;), by = &quot;sample_id&quot;) %&gt;% group_by(sample_type) %&gt;% mutate(x_cen = median(Dim1, na.rm = TRUE)) %&gt;% mutate(y_cen = median(Dim2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot() + geom_point(aes(x = Dim1, y = Dim2, color = sample_type),alpha=0.5, size=0.5) + geom_segment(aes(x = x_cen, y = y_cen, xend = Dim1, yend = Dim2, color = sample_type), alpha = 0.2) + scale_color_manual(values = c(&quot;#bdca50&quot;, &quot;#AA3377&quot;)) + geom_segment(data = species_loadings_rescaled, aes(x = 0, xend = Dim1_rescaled, y = 0, yend = Dim2_rescaled), arrow = arrow(length = unit(0.25, &quot;cm&quot;)),size=0.5) + geom_label_repel(data = species_loadings_rescaled, aes(x = Dim1_rescaled, y = Dim2_rescaled, label = variables), size = 3)+ xlab(&quot;PCOA1&quot;)+ ylab(&quot;PCOA2&quot;)+ theme_minimal() ggsave(&quot;figures/overall_pcoa_type.pdf&quot;,width=9, height=6, units=&quot;in&quot;) 7.2 Taxonomic groups multi_pcoa %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample_id&quot;) %&gt;% dplyr::left_join(read_tsv(&quot;data/sample.tsv&quot;), by = &quot;sample_id&quot;) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% group_by(tax_group) %&gt;% mutate(x_cen = median(Dim1, na.rm = TRUE)) %&gt;% mutate(y_cen = median(Dim2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot() + geom_point(aes(x = Dim1, y = Dim2, color = tax_group),alpha=0.5, size=0.5) + geom_segment(aes(x = x_cen, y = y_cen, xend = Dim1, yend = Dim2, color = tax_group), alpha = 0.2) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + geom_segment(data = species_loadings_rescaled, aes(x = 0, xend = Dim1_rescaled, y = 0, yend = Dim2_rescaled), arrow = arrow(length = unit(0.25, &quot;cm&quot;)),size=0.5) + geom_label_repel(data = species_loadings_rescaled, aes(x = Dim1_rescaled, y = Dim2_rescaled, label = variables), size = 3)+ xlab(&quot;PCOA1&quot;)+ ylab(&quot;PCOA2&quot;)+ theme_minimal() ggsave(&quot;figures/overall_pcoa_taxa.pdf&quot;,width=9, height=6, units=&quot;in&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
