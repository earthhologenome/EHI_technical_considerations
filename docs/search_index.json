[["index.html", "Earth Hologenome Initiative | Pietroni et al. in prep Practical considerations for hologenomic data generation and analysis in wild vertebrates 1 Introduction 1.1 Prepare the R environment", " Earth Hologenome Initiative | Pietroni et al. in prep Practical considerations for hologenomic data generation and analysis in wild vertebrates Carlotta Pietroni, Nanna Gaun, Jonas Lauritsen, Aoife Leonard, Garazi Martin, Ostaizka Aizpurua, Antton Alberdi1, Raphael Eisenhofer 2024-06-10 1 Introduction This webbook contains all the code used for the comparative study on the generation of metagenomic data from faeces of various species using three extraction methods. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/earthhologenome/EHI_technical_considerations.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(rairtable) library(phyloseq) library(ggtree) library(ape) library(ggnewscale) library(ggtreeExtra) library(nlme) library(broom) library(broom.mixed) library(ggdist) University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ "],["metadata-access.html", "2 Metadata access 2.1 Laboratory 2.2 Bioinformatics 2.3 Host species", " 2 Metadata access Earth Hologenome Initiative metadata are stored in Airtable databases. Contents of those databases can be fetched using the R package raritable. However, data can be directly fetched only with personal access tokens. The relevant fraction of the EHI metadata is published on the EHI website www.earthhologenome.org/database. 2.1 Laboratory 2.1.1 Samples airtable(&quot;tblW03Z3DcjRdEkoS&quot;, &quot;appQpr6MxnaiVHsHy&quot;) %&gt;% read_airtable(., fields = c( #Sample columns &quot;Code&quot;,&quot;Type&quot;,&quot;Origin&quot;,&quot;Freshness&quot;,&quot;Freezing&quot;, #Host specimen columns &quot;specimen_id&quot;,&quot;Species&quot;,&quot;Family&quot;,&quot;Order&quot;,&quot;Class&quot;,&quot;Development&quot;,&quot;Sex&quot;,&quot;Length (mm)&quot;,&quot;Weight (g)&quot;, #Capture columns &quot;captures_flat&quot;,&quot;Place&quot;,&quot;Country&quot;,&quot;Biome&quot;,&quot;Environment&quot;,&quot;Latitude reduced&quot;,&quot;Longitude reduced&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% select(-airtable_record_id) %&gt;% #rename columns rename( #Sample columns sample_id=Code, sample_type=Type, sample_origin=Origin, sample_freshness=Freshness, sample_freezing=Freezing, #Host specimen columns specimen_id=specimen_id, specimen_species=Species, specimen_order=Order, specimen_family=Family, specimen_class=Class, specimen_development=Development, specimen_sex=Sex, specimen_length=`Length (mm)`, specimen_weight=`Weight (g)`, #Capture columns capture_id=captures_flat, capture_place=Place, capture_country=Country, capture_biome=Biome, capture_environment=Environment, capture_latitude=`Latitude reduced`, capture_longitude=`Longitude reduced`, ) %&gt;% #remove negative controls filter(specimen_id != &quot;&quot;) %&gt;% #add taxonomy group for analysis mutate(tax_group = case_when( !str_detect(specimen_order, &quot;Chiroptera&quot;) &amp; str_detect(specimen_class, &quot;Mammalia&quot;) ~ &quot;Mammals&quot;, str_detect(specimen_order, &quot;Chiroptera&quot;) ~ &quot;Bats&quot;, str_detect(specimen_order, &quot;Squamata&quot;) ~ &quot;Reptiles&quot;, str_detect(specimen_class, &quot;Aves&quot;) ~ &quot;Birds&quot;, str_detect(specimen_class, &quot;Amphibia&quot;) ~ &quot;Amphibians&quot; )) %&gt;% #save clean table write_tsv(&quot;data/sample.tsv&quot;) 2.1.2 Extraction airtable(&quot;tblBcTZcRG1E9wsGO&quot;, &quot;appQpr6MxnaiVHsHy&quot;) %&gt;% read_airtable(., fields = c( #Sample columns &quot;Ex code&quot;,&quot;EX ng/ul&quot;,&quot;EX ul&quot;,&quot;EX DNA ng&quot;,&quot;bb_flat&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% select(-airtable_record_id) %&gt;% #rename columns rename( extraction_id=`Ex code`, extraction_concentration=`EX ng/ul`, extraction_volume=`EX ul`, extraction_total=`EX DNA ng`, sample_id=`bb_flat`, ) %&gt;% #save clean table write_tsv(&quot;data/extraction.tsv&quot;) 2.1.3 Library airtable(&quot;tblo6AuYpxbbGw9gh&quot;, &quot;appQpr6MxnaiVHsHy&quot;) %&gt;% read_airtable(., fields = c( #Sample columns &quot;LI Code&quot;,&quot;ex_sample_flat&quot;,&quot;Datasets_flat&quot;,&quot;sample_flat&quot;, #library stats &quot;Input volume&quot;,&quot;Input DNA (ng)&quot;,&quot;Adaptor nM&quot;,&quot;Required PCR cycles&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% select(-airtable_record_id) %&gt;% #rename columns rename( #sample identifiers library_id=`LI Code`, sample_id=sample_flat, extraction_id=ex_sample_flat, sequencing_datasets=Datasets_flat, #library stats library_input_volume=`Input volume`, library_input_dna=`Input DNA (ng)`, library_adaptor_molarity=`Adaptor nM`, library_PCR_cycles_required=`Required PCR cycles` ) %&gt;% #save clean table write_tsv(&quot;data/library.tsv&quot;) 2.1.4 Index airtable(&quot;tblhfsiR4NI9XJQG0&quot;, &quot;appQpr6MxnaiVHsHy&quot;) %&gt;% read_airtable(., fields = c( #Sample columns &quot;IN Code&quot;,&quot;li_sample_flat&quot;,&quot;Datasets_flat&quot;, #indexing stats &quot;Adaptors (nM)&quot;,&quot;Library (nM)&quot;,&quot;Number of PCR cycles&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% select(-airtable_record_id) %&gt;% #rename columns rename( #sample identifiers index_id=`IN Code`, library_id=li_sample_flat, #indexing stats index_adaptors_molarity=`Adaptors (nM)`, index_library_molarity=`Library (nM)`, index_PCR_cycles_given=`Number of PCR cycles`) %&gt;% #save clean table write_tsv(&quot;data/index.tsv&quot;) 2.1.5 Sequence airtable(&quot;tblaMWLkBUn2g5gRR&quot;, &quot;appQpr6MxnaiVHsHy&quot;) %&gt;% read_airtable(., fields = c(#Sample columns &quot;EHI_number&quot;,&quot;in_code_flat&quot;, #Sequencing information &quot;Raw data size (GB)&quot;,&quot;Q20%&quot;,&quot;Q30%&quot;,&quot;GC%&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% select(-airtable_record_id) %&gt;% #rename columns rename( #sample identifiers sequence_id=EHI_number, index_id=in_code_flat, #sequencing information sequence_data=`Raw data size (GB)`, sequence_q20=`Q20%`, sequence_q30=`Q30%`, sequence_gc=`GC%` ) %&gt;% #save clean table write_tsv(&quot;data/sequence.tsv&quot;) 2.2 Bioinformatics 2.2.1 Preprocessing airtable(&quot;tblJfLRU2FIVz37Y1&quot;, &quot;appQpr6MxnaiVHsHy&quot;) %&gt;% read_airtable(., fields = c(#Sample columns &quot;Code&quot;,&quot;EHI_plaintext&quot;,&quot;sample_code&quot;, #Host genome info &quot;reference_genome_flat&quot;,&quot;Reference genome closeness&quot;, #Quality-filtering statistics &quot;reads_pre_fastp&quot;,&quot;reads_post_fastp&quot;,&quot;bases_pre_fastp&quot;,&quot;bases_post_fastp&quot;,&quot;adapter_trimmed_reads&quot;,&quot;adapter_trimmed_bases&quot;,&quot;host_reads&quot;,&quot;metagenomic_bases&quot;,&quot;host_bases&quot;,&quot;host_duplicate_fraction&quot;, #Metagenome properties &quot;singlem_fraction&quot;,&quot;C&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% select(-airtable_record_id) %&gt;% #rename columns rename( #data identifiers preprocessing_id=Code, sequence_id=EHI_plaintext, sample_id=sample_code, #host genome info reference_id=reference_genome_flat, reference_closenees=`Reference genome closeness`, #metagenomic complexity estimation nonpareil_coverage=C ) %&gt;% #save clean table write_tsv(&quot;data/preprocessing.tsv&quot;) 2.2.2 Assembly airtable(&quot;tblG6ZIvkYN844I97&quot;, &quot;appQpr6MxnaiVHsHy&quot;) %&gt;% read_airtable(., fields = c(&quot;ID&quot;,&quot;Assembly_code&quot;,&quot;EHI_number_api&quot;,&quot;preprocessed_flat&quot;, &quot;Type (from AB Batch)&quot;,&quot;metagenomic_bases&quot;,&quot;assembly_length&quot;,&quot;N50&quot;,&quot;L50&quot;,&quot;num_contigs&quot;,&quot;largest_contig&quot;,&quot;num_bins&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% select(-airtable_record_id) %&gt;% #rename columns rename( #data identifiers assembly_input_id=ID, #in coassemblies multiple assembly_input_id&#39;s link to a single assembly_id assembly_id=Assembly_code, preprocessing_id=preprocessed_flat, sequence_id=EHI_number_api, #assembly information assembly_type=`Type (from AB Batch)`, assembly_input_bases=metagenomic_bases, #stats assembly_n50=N50, assembly_l50=L50, assembly_num_contigs=num_contigs, assembly_largest_contig=largest_contig, assembly_num_bins=num_bins ) %&gt;% #save clean table write_tsv(&quot;data/assembly.tsv&quot;) 2.2.3 Genomes airtable(&quot;tblMzd3oyaJhdeQcs&quot;, &quot;appWbHBNLE6iAsMRV&quot;) %&gt;% read_airtable(., fields = c(&quot;ID&quot;,&quot;eha_number&quot;, #Taxonomy &quot;domain&quot;,&quot;phylum&quot;,&quot;class&quot;,&quot;order&quot;,&quot;family&quot;,&quot;genus&quot;,&quot;species&quot;,&quot;taxonomy_level&quot;, #Quality &quot;completeness&quot;,&quot;contamination&quot;,&quot;size&quot;,&quot;GC&quot;,&quot;N50&quot;,&quot;coding_density&quot;,&quot;contigs&quot;, #Host &quot;host_species&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% select(-airtable_record_id) %&gt;% #rename columns rename( #data identifiers mag_id=ID, assembly_id=eha_number, #taxonomy mag_domain=domain, mag_phylum=phylum, mag_class=class, mag_order=order, mag_family=family, mag_genus=genus, mag_species=species, mag_taxonomy_level=taxonomy_level, #mag stats mag_completeness=completeness, mag_contamination=contamination, mag_size=size, mag_gc=GC, mag_n50=N50, mag_contigs=contigs ) %&gt;% #save clean table write_tsv(&quot;data/mag.tsv&quot;) 2.2.4 MAG mapping airtable(&quot;tblWDyQmM9rQ9wq57&quot;, &quot;appWbHBNLE6iAsMRV&quot;) %&gt;% read_airtable(., fields = c(&quot;Code&quot;,&quot;EHI_sample_static&quot;, #Taxonomy &quot;MAG_mapping_percentage&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% select(-airtable_record_id) %&gt;% #rename columns rename( mapping_id=Code, sequence_id=EHI_sample_static, mapping_percentage=MAG_mapping_percentage ) %&gt;% #save clean table write_tsv(&quot;data/mapping.tsv&quot;) 2.2.5 Reference genomes airtable(&quot;tbl1t5vnst50DjT9A&quot;, &quot;app6ADWyLxBkDcqYX&quot;) %&gt;% read_airtable(., fields = c(&quot;Code&quot;,&quot;Accession&quot;,&quot;species_flat&quot;,&quot;Quality&quot;,&quot;Size (MB)&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% select(-airtable_record_id) %&gt;% #rename columns rename( #data identifiers reference_id=Code, reference_accession=Accession, reference_species=species_flat, #genome stats reference_quality=Quality, reference_size=`Size (MB)` ) %&gt;% #save clean table write_tsv(&quot;data/reference.tsv&quot;) 2.3 Host species host_metadata &lt;- airtable(&quot;tblaRHhZHRPMUjcKJ&quot;, &quot;app6ADWyLxBkDcqYX&quot;) %&gt;% read_airtable(., fields = c(&quot;Name&quot;,&quot;taxid&quot;,&quot;genus_flat&quot;,&quot;family_flat&quot;,&quot;order_flat&quot;,&quot;class_flat&quot;), id_to_col = TRUE) %&gt;% as_tibble() %&gt;% unnest() %&gt;% select(-airtable_record_id) %&gt;% #only retain samples associated with samples rename(host_species=Name, host_genus=genus_flat, host_family=family_flat, host_order=order_flat, host_class=class_flat) %&gt;% # Write to table write_tsv(&quot;data/host.tsv&quot;) "],["general-statistics.html", "3 General statistics 3.1 Sample statistics 3.2 Data statistics", " 3 General statistics 3.1 Sample statistics 3.1.1 All read_tsv(&quot;data/sample.tsv&quot;) %&gt;% summarise(specimens=n_distinct(specimen_id), species=n_distinct(specimen_species), orders=n_distinct(specimen_order), families=n_distinct(specimen_family)) %&gt;% tt() tinytable_wxthjmg3cbidj8xc2pmh .table td.tinytable_css_ryuo33uon0q71vwb03ew, .table th.tinytable_css_ryuo33uon0q71vwb03ew { border-bottom: solid 0.1em #d3d8dc; } specimens species orders families 4364 244 22 67 3.1.2 Subset Faecal and cloacal swab samples employed in the study. inner_join(read_tsv(&quot;data/sample.tsv&quot;), read_tsv(&quot;data/extraction.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% summarise(specimens=n_distinct(specimen_id), species=n_distinct(specimen_species), orders=n_distinct(specimen_order), families=n_distinct(specimen_family), swabs=n_distinct(sample_id[sample_type == &quot;Anal/cloacal swab&quot;]), faeces=n_distinct(sample_id[sample_type == &quot;Faecal&quot;])) %&gt;% tt() tinytable_tykb08euzk56putqy2mo .table td.tinytable_css_zcj26u54k14gepji1jqm, .table th.tinytable_css_zcj26u54k14gepji1jqm { border-bottom: solid 0.1em #d3d8dc; } specimens species orders families swabs faeces 2025 151 17 54 442 1824 3.1.3 Origin of samples (Figure S1) read_tsv(&quot;data/sample.tsv&quot;) %&gt;% #subset columns select( sample_id, specimen_species, specimen_order, specimen_class, capture_latitude, capture_longitude ) %&gt;% #Add jitter to points mutate( capture_latitude_jitter=capture_latitude+rnorm(length(capture_latitude), mean=0, sd=0.5), capture_longitude_jitter=capture_longitude+rnorm(length(capture_longitude), mean=0, sd=0.5), ) %&gt;% #Plot map ggplot(.) + geom_map( data=map_data(&quot;world&quot;), map = map_data(&quot;world&quot;), aes(long, lat, map_id=region), color = &quot;white&quot;, fill = &quot;#cccccc&quot;, size = 0.2 ) + geom_point( aes(x=capture_longitude_jitter,y=capture_latitude_jitter, color=specimen_order), alpha=0.5, size=0.5, shape=16) + labs(color=&quot;Taxonomic order&quot;) + theme_minimal() + theme( axis.title.x=element_blank(), axis.title.y=element_blank(), legend.position = &quot;bottom&quot;) 3.2 Data statistics 3.2.1 Total data left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(bases_pre_fastp = bases_pre_fastp / 1000000000) %&gt;% #convert bases to gigabases (GB) summarise( total= sum(bases_pre_fastp, na.rm = TRUE), swabs=sum(bases_pre_fastp[sample_type == &quot;Anal/cloacal swab&quot;], na.rm = TRUE), faeces=sum(bases_pre_fastp[sample_type == &quot;Faecal&quot;], na.rm = TRUE), swabs_n=n_distinct(preprocessing_id[sample_type == &quot;Anal/cloacal swab&quot;], na.rm = TRUE), faeces_n=n_distinct(preprocessing_id[sample_type == &quot;Faecal&quot;], na.rm = TRUE), mean= mean(bases_pre_fastp, na.rm = TRUE), sd = sd(bases_pre_fastp, na.rm = TRUE) ) %&gt;% tt() tinytable_cb6wpo31foswt29ex6u1 .table td.tinytable_css_1lsn32a4l3efqfiwz0fr, .table th.tinytable_css_1lsn32a4l3efqfiwz0fr { border-bottom: solid 0.1em #d3d8dc; } total swabs faeces swabs_n faeces_n mean sd 11262.32 1998.166 9264.149 345 1702 5.561637 4.804119 3.2.2 Quality-filtered data read_tsv(&quot;data/preprocessing.tsv&quot;) %&gt;% mutate(bases_post_fastp = bases_post_fastp / 1000000000) %&gt;% #convert bases to gigabases (GB) summarise( total= sum(bases_post_fastp, na.rm = TRUE), mean= mean(bases_post_fastp, na.rm = TRUE), sd = sd(bases_post_fastp, na.rm = TRUE) ) %&gt;% tt() tinytable_rgppkoltn62wrzc184vh .table td.tinytable_css_3nx6xlxmuu3uwr216n7v, .table th.tinytable_css_3nx6xlxmuu3uwr216n7v { border-bottom: solid 0.1em #d3d8dc; } total mean sd 13486.81 5.377518 4.586315 3.2.3 Host genomic data read_tsv(&quot;data/preprocessing.tsv&quot;) %&gt;% mutate(host_bases = host_bases / 1000000000) %&gt;% #convert bases to gigabases (GB) summarise( total= sum(host_bases, na.rm = TRUE), mean= mean(host_bases, na.rm = TRUE), sd = sd(host_bases, na.rm = TRUE) ) %&gt;% tt() tinytable_mcaqkgious1b7q55wi86 .table td.tinytable_css_677nsqmxluu6rziocemu, .table th.tinytable_css_677nsqmxluu6rziocemu { border-bottom: solid 0.1em #d3d8dc; } total mean sd 5554.962 2.19477 3.711089 3.2.4 Metagenomic data read_tsv(&quot;data/preprocessing.tsv&quot;) %&gt;% mutate(metagenomic_bases = metagenomic_bases / 1000000000) %&gt;% #convert bases to gigabases (GB) summarise( total= sum(metagenomic_bases, na.rm = TRUE), mean= mean(metagenomic_bases, na.rm = TRUE), sd = sd(metagenomic_bases, na.rm = TRUE) ) %&gt;% tt() tinytable_j4xmpdq9g4t9illwx7bz .table td.tinytable_css_awvhz9h1ewuyqjb0mpsp, .table th.tinytable_css_awvhz9h1ewuyqjb0mpsp { border-bottom: solid 0.1em #d3d8dc; } total mean sd 7931.853 3.133881 3.272415 3.2.5 Assemblies left_join(read_tsv(&quot;data/assembly.tsv&quot;), read_tsv(&quot;data/preprocessing.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sample.tsv&quot;),by=&quot;sample_id&quot;) %&gt;% group_by(assembly_type) %&gt;% summarise(assembly_n=n_distinct(assembly_id), swabs_n=n_distinct(assembly_id[sample_type == &quot;Anal/cloacal swab&quot;], na.rm = TRUE), faeces_n=n_distinct(assembly_id[sample_type == &quot;Faecal&quot;], na.rm = TRUE), swabs_size=sum(assembly_length[sample_type == &quot;Anal/cloacal swab&quot;], na.rm = TRUE), faeces_size=sum(assembly_length[sample_type == &quot;Faecal&quot;], na.rm = TRUE)) %&gt;% tt() tinytable_rxfcb1a49pvalydnkpsw .table td.tinytable_css_j9ro1nuvsw901j5wtr1v, .table th.tinytable_css_j9ro1nuvsw901j5wtr1v { border-bottom: solid 0.1em #d3d8dc; } assembly_type assembly_n swabs_n faeces_n swabs_size faeces_size Coassembly 294 41 227 20029149172 916263568901 Individual 1722 177 1377 2337823366 132226412145 Multisplit 1 0 1 0 0 NA 1 0 1 0 0 3.2.6 MAGs left_join(read_tsv(&quot;data/mag.tsv&quot;), read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;assembly_id&quot;) %&gt;% left_join(read_tsv(&quot;data/preprocessing.tsv&quot;),by=&quot;preprocessing_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sample.tsv&quot;),by=&quot;sample_id&quot;) %&gt;% select(mag_id,mag_phylum,mag_completeness,mag_contamination,sample_type)%&gt;% unique() %&gt;% summarise(number=n(), swabs_n=n_distinct(mag_id[sample_type == &quot;Anal/cloacal swab&quot;], na.rm = TRUE), faeces_n=n_distinct(mag_id[sample_type == &quot;Faecal&quot;], na.rm = TRUE), phylums=n_distinct(mag_phylum), completeness=mean(mag_completeness), contamination=mean(mag_contamination)) %&gt;% tt() tinytable_00koccm0jpc0565q80yl .table td.tinytable_css_frix1qbumql6dw7oshrv, .table th.tinytable_css_frix1qbumql6dw7oshrv { border-bottom: solid 0.1em #d3d8dc; } number swabs_n faeces_n phylums completeness contamination 51690 1896 47757 42 83.52126 2.000393 "],["laboratory-sample-processing.html", "4 Laboratory sample processing 4.1 DNA extraction 4.2 Sequencing library preparation 4.3 Data quality 4.4 Data duplication", " 4 Laboratory sample processing 4.1 DNA extraction 4.1.1 General statistics read_tsv(&quot;data/extraction.tsv&quot;) %&gt;% summarise( max= max(extraction_total, na.rm = TRUE), min= min(extraction_total, na.rm = TRUE), mean= mean(extraction_total, na.rm = TRUE), sd = sd(extraction_total, na.rm = TRUE) ) %&gt;% tt() tinytable_59i9vg949t2gy98k752o .table td.tinytable_css_hkh1yd83xnvfhw9cduey, .table th.tinytable_css_hkh1yd83xnvfhw9cduey { border-bottom: solid 0.1em #d3d8dc; } max min mean sd 7110 0 365.683 677.4012 4.1.2 Sample types 4.1.2.1 Data distribution left_join(read_tsv(&quot;data/extraction.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% ggplot(aes(x=sample_type, y= extraction_total, fill=sample_type, color=sample_type)) + ylim(0, 2000) + geom_jitter(position = position_jitter(width = 0.2), alpha = 0.5, size=0.5) + stat_halfeye(adjust = 0.5,width = 0.5, .width = 0, justification = -.55,normalize = &quot;groups&quot;) + scale_color_manual(values = c(&quot;#bdca50&quot;, &quot;#AA3377&quot;)) + scale_fill_manual(values = c(&quot;#bdca5050&quot;, &quot;#AA337750&quot;)) + labs(y=&quot;Density&quot;,x=&quot;DNA yield&quot;, fill=&quot;Sample type&quot;, color=&quot;Sample type&quot;) + theme_classic() ggsave(&quot;figures/extraction_type.pdf&quot;,width=6, height=4, units=&quot;in&quot;) 4.1.2.2 Comparison left_join(read_tsv(&quot;data/extraction.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(extraction_total = ifelse(extraction_total == 0, 0.00001, extraction_total)) %&gt;% mutate(extraction_total = log(extraction_total)) %&gt;% select(extraction_total,sample_type) %&gt;% mutate(sample_type = factor(sample_type)) %&gt;% wilcox.test(extraction_total ~ sample_type,data=.) %&gt;% tidy() # A tibble: 1 × 4 statistic p.value method alternative &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; 1 335473 3.41e-41 Wilcoxon rank sum test with continuity correction two.sided left_join(read_tsv(&quot;data/extraction.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(sample_type) %&gt;% summarise( mean= mean(extraction_total, na.rm = TRUE), sd = sd(extraction_total, na.rm = TRUE)) %&gt;% tt() tinytable_6hja782lg2arx8qm8s3p .table td.tinytable_css_m4s0m2kg3no8y9u3y4e7, .table th.tinytable_css_m4s0m2kg3no8y9u3y4e7 { border-bottom: solid 0.1em #d3d8dc; } sample_type mean sd Anal/cloacal swab 170.2285 362.7389 Faecal 316.6666 423.6434 4.1.3 Taxonomy 4.1.3.1 Data distribution left_join(read_tsv(&quot;data/extraction.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(aes(y=extraction_total,x=tax_group,color=tax_group,fill=tax_group)) + ylim(0, 2000) + geom_jitter(position = position_jitter(width = 0.2), alpha = 0.5, size=0.5) + stat_halfeye(adjust = 0.5,width = 0.5, .width = 0, justification = -.55,normalize = &quot;groups&quot;) + scale_color_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + labs(y=&quot;DNA yield&quot;,x=&quot;Taxonomic group&quot;, color=&quot;Sample type&quot;) + theme_classic() ggsave(&quot;figures/extraction_taxa.pdf&quot;,width=9, height=4, units=&quot;in&quot;) 4.1.3.2 Comparison left_join(read_tsv(&quot;data/extraction.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(extraction_total = ifelse(extraction_total == 0, 0.00001, extraction_total)) %&gt;% mutate(extraction_total = log(extraction_total)) %&gt;% select(extraction_total,tax_group) %&gt;% mutate(sample_type = factor(tax_group)) %&gt;% kruskal.test(extraction_total ~ tax_group,data=.) Kruskal-Wallis rank sum test data: extraction_total by tax_group Kruskal-Wallis chi-squared = 946.6, df = 4, p-value &lt; 2.2e-16 left_join(read_tsv(&quot;data/extraction.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(tax_group) %&gt;% summarise( mean= mean(extraction_total, na.rm = TRUE), sd = sd(extraction_total, na.rm = TRUE)) %&gt;% tt() tinytable_4biwg2yb9yrvxk0pdbpy .table td.tinytable_css_bwt63vpapae9tedf2szq, .table th.tinytable_css_bwt63vpapae9tedf2szq { border-bottom: solid 0.1em #d3d8dc; } tax_group mean sd Amphibians 233.35078 358.90219 Bats 59.60574 92.00357 Birds 74.43550 262.34517 Mammals 463.93202 471.41487 Reptiles 394.50619 437.86229 4.2 Sequencing library preparation 4.2.1 Overall left_join(read_tsv(&quot;data/library.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(library_PCR_cycles_required &gt; 0) %&gt;% summarise( input=mean(library_input_dna, na.rm = TRUE), max= max(library_PCR_cycles_required, na.rm = TRUE), min= min(library_PCR_cycles_required, na.rm = TRUE), mean= mean(library_PCR_cycles_required, na.rm = TRUE), sd = sd(library_PCR_cycles_required, na.rm = TRUE)) %&gt;% tt() tinytable_kcux1prz3yqoy0su2yjb .table td.tinytable_css_at7fxtk0noe97l91u4w5, .table th.tinytable_css_at7fxtk0noe97l91u4w5 { border-bottom: solid 0.1em #d3d8dc; } input max min mean sd 89.34565 33 2 9.150046 4.390537 left_join(read_tsv(&quot;data/library.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% lm(library_PCR_cycles_required ~ library_input_dna, data = .) %&gt;% tidy() # A tibble: 2 × 5 term estimate std.error statistic p.value &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 (Intercept) 11.6 0.110 105. 0 2 library_input_dna -0.0284 0.000901 -31.6 1.11e-183 left_join(read_tsv(&quot;data/library.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% lm(library_PCR_cycles_required ~ library_input_dna * sample_type, data = .) %&gt;% anova() %&gt;% tidy() # A tibble: 4 × 6 term df sumsq meansq statistic p.value &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 library_input_dna 1 14071. 14071. 1071. 4.30e-195 2 sample_type 1 2439. 2439. 186. 8.48e- 41 3 library_input_dna:sample_type 1 0.0500 0.0500 0.00381 9.51e- 1 4 Residuals 2441 32067. 13.1 NA NA left_join(read_tsv(&quot;data/library.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% lm(library_PCR_cycles_required ~ library_input_dna * tax_group, data = .) %&gt;% anova() %&gt;% tidy() # A tibble: 4 × 6 term df sumsq meansq statistic p.value &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 library_input_dna 1 14071. 14071. 1145. 5.17e-206 2 tax_group 4 4140. 1035. 84.2 4.74e- 67 3 library_input_dna:tax_group 4 435. 109. 8.85 4.32e- 7 4 Residuals 2435 29931. 12.3 NA NA 4.2.2 Sample types left_join(read_tsv(&quot;data/library.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(library_input_dna &lt;= 200) %&gt;% filter(library_PCR_cycles_required &gt; 0) %&gt;% ggplot(aes(y=library_PCR_cycles_required, x=library_input_dna, color=sample_type, fill=sample_type, group=sample_type)) + geom_point(alpha=0.5, size=0.5) + stat_smooth(method = &quot;lm&quot;, formula = y ~ x, geom = &quot;smooth&quot;) + scale_color_manual(values = c(&quot;#bdca50&quot;, &quot;#AA3377&quot;)) + scale_fill_manual(values = c(&quot;#bdca5050&quot;, &quot;#AA337750&quot;)) + theme_classic() + labs(y=&quot;Required number of cycles&quot;,x=&quot;Amount of inputted DNA (ng)&quot;, color=&quot;Sample type&quot;) + theme_classic() ggsave(&quot;figures/cycles_type.pdf&quot;,width=6, height=3, units=&quot;in&quot;) 4.2.2.1 Comparisons Relationship between the amount of inputted DNA (ng) and the required number of cycles. left_join(read_tsv(&quot;data/library.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(library_PCR_cycles_required&gt;0 &amp; library_input_dna&gt;0) %&gt;% lme(library_PCR_cycles_required ~ library_input_dna, random=~1 | sample_type, data = .) %&gt;% broom.mixed::tidy() %&gt;% tt() tinytable_jr9vspls9dlfezcto92f .table td.tinytable_css_y2xmk19p99qbd3zdr8k3, .table th.tinytable_css_y2xmk19p99qbd3zdr8k3 { border-bottom: solid 0.1em #d3d8dc; } effect group term estimate std.error df statistic p.value fixed NA (Intercept) 11.87417166 1.1716203608 2330 10.13483 1.187767e-23 fixed NA library_input_dna -0.02501844 0.0008256453 2330 -30.30168 2.507418e-170 ran_pars sample_type sd_(Intercept) 1.64945139 NA NA NA NA ran_pars Residual sd_Observation 3.30432885 NA NA NA NA Comparison between slopes. left_join(read_tsv(&quot;data/library.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% lm(library_PCR_cycles_required ~ library_input_dna * sample_type, data = .) %&gt;% broom::tidy() %&gt;% tt() tinytable_uuk6sqqpub3hg91v5nja .table td.tinytable_css_k3ean9v8gtmnejdfwob2, .table th.tinytable_css_k3ean9v8gtmnejdfwob2 { border-bottom: solid 0.1em #d3d8dc; } term estimate std.error statistic p.value (Intercept) 13.3047246163 0.187031107 71.13642643 0.000000e+00 library_input_dna -0.0260524410 0.001812871 -14.37082274 5.140847e-45 sample_typeFaecal -2.4762116244 0.227612093 -10.87908638 5.960119e-27 library_input_dna:sample_typeFaecal 0.0001282468 0.002078874 0.06169052 9.508143e-01 4.2.3 Taxonomy left_join(read_tsv(&quot;data/library.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(library_input_dna &lt;= 200) %&gt;% filter(library_PCR_cycles_required &gt; 0) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(., aes(y=library_PCR_cycles_required, x=library_input_dna, color=tax_group, group=tax_group)) + geom_point(alpha=0.5, size=0.5) + stat_smooth(aes(fill = tax_group), method = &quot;lm&quot;, formula = y ~ x, geom = &quot;smooth&quot;) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + theme_classic() + labs(y=&quot;Required number of cycles&quot;,x=&quot;Amount of inputted DNA (ng)&quot;, color=&quot;Sample type&quot;, fill=&quot;Sample type&quot;) + theme_classic() ggsave(&quot;figures/cycles_taxa.pdf&quot;,width=6, height=3, units=&quot;in&quot;) 4.3 Data quality left_join(read_tsv(&quot;data/preprocessing.tsv&quot;),read_tsv(&quot;data/sample.tsv&quot;),by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sequence.tsv&quot;),by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/index.tsv&quot;),by=&quot;index_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(lowqual_perc_reads=(1-reads_post_fastp/reads_pre_fastp)*100) %&gt;% mutate(lowqual_perc_bases=(1-bases_post_fastp/bases_pre_fastp)*100) %&gt;% #Plot map EE6677 &lt; bats ggplot(aes(y=lowqual_perc_bases, x=index_PCR_cycles_given, colour=sample_type, fill=sample_type, group=sample_type)) + geom_jitter(alpha=0.3) + stat_smooth(method = &quot;lm&quot;, formula = y ~ x, geom = &quot;smooth&quot;, alpha=0.2) + scale_color_manual(values = c(&quot;#bdca50&quot;, &quot;#AA3377&quot;)) + scale_fill_manual(values = c(&quot;#bdca5080&quot;, &quot;#AA337780&quot;)) + scale_x_log10() + theme_classic() left_join(read_tsv(&quot;data/preprocessing.tsv&quot;),read_tsv(&quot;data/sample.tsv&quot;),by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sequence.tsv&quot;),by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/index.tsv&quot;),by=&quot;index_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(lowqual_perc_reads=(1-reads_post_fastp/reads_pre_fastp)*100) %&gt;% mutate(lowqual_perc_bases=(1-bases_post_fastp/bases_pre_fastp)*100) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(aes(y=lowqual_perc_bases, x=index_PCR_cycles_given, colour=tax_group, fill=tax_group, group=tax_group)) + geom_point(alpha=0.3) + stat_smooth(method = &quot;lm&quot;, formula = y ~ x, geom = &quot;smooth&quot;, alpha=0.2) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + scale_x_log10() + theme_classic() + theme(legend.position = &quot;bottom&quot;) 4.4 Data duplication left_join(read_tsv(&quot;data/preprocessing.tsv&quot;),read_tsv(&quot;data/sample.tsv&quot;),by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sequence.tsv&quot;),by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/index.tsv&quot;),by=&quot;index_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(lowqual_perc_reads=(1-reads_post_fastp/reads_pre_fastp)*100) %&gt;% mutate(lowqual_perc_bases=(1-bases_post_fastp/bases_pre_fastp)*100) %&gt;% #Plot map EE6677 &lt; bats ggplot(aes(y=host_duplicate_fraction, x=index_PCR_cycles_given, colour=sample_type, fill=sample_type, group=sample_type)) + geom_jitter(alpha=0.3) + stat_smooth(method = &quot;lm&quot;, formula = y ~ x, geom = &quot;smooth&quot;, alpha=0.2) + scale_color_manual(values = c(&quot;#bdca50&quot;, &quot;#AA3377&quot;)) + scale_fill_manual(values = c(&quot;#bdca5080&quot;, &quot;#AA337780&quot;)) + scale_x_log10() + theme_classic() left_join(read_tsv(&quot;data/preprocessing.tsv&quot;),read_tsv(&quot;data/sample.tsv&quot;),by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sequence.tsv&quot;),by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/index.tsv&quot;),by=&quot;index_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(lowqual_perc_reads=(1-reads_post_fastp/reads_pre_fastp)*100) %&gt;% mutate(lowqual_perc_bases=(1-bases_post_fastp/bases_pre_fastp)*100) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(aes(y=host_duplicate_fraction, x=index_PCR_cycles_given, colour=tax_group, fill=tax_group, group=tax_group)) + geom_point(alpha=0.3) + stat_smooth(method = &quot;lm&quot;, formula = y ~ x, geom = &quot;smooth&quot;, alpha=0.2) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + scale_x_log10() + theme_classic() + theme(legend.position = &quot;bottom&quot;) "],["host-genomics.html", "5 Host genomics 5.1 Host DNA fraction 5.2 Genome depth", " 5 Host genomics 5.1 Host DNA fraction 5.1.1 Data overview left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(host_percentage= host_bases/bases_post_fastp*100) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(sample_type) %&gt;% summarise(mean=mean(host_percentage, na.rm=T),sd=sd(host_percentage, na.rm=T)) %&gt;% tt() tinytable_9sv1lu76bzp9ytjqujpz .table td.tinytable_css_s9odag4x4mq2nwhcf9xl, .table th.tinytable_css_s9odag4x4mq2nwhcf9xl { border-bottom: solid 0.1em #d3d8dc; } sample_type mean sd Anal/cloacal swab 75.76413 32.05899 Faecal 22.94532 32.09473 left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(host_percentage= host_bases/bases_post_fastp*100) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(tax_group) %&gt;% summarise(mean=mean(host_percentage, na.rm=T),sd=sd(host_percentage, na.rm=T)) %&gt;% tt() tinytable_l0b5461g1siv75zqzlsc .table td.tinytable_css_k7m6p10olq0liiwfzfj6, .table th.tinytable_css_k7m6p10olq0liiwfzfj6 { border-bottom: solid 0.1em #d3d8dc; } tax_group mean sd Amphibians 0.2968512 1.367301 Bats 49.4004705 37.779131 Birds 58.5039633 38.603463 Mammals 29.5029544 36.464343 Reptiles 12.4971018 22.008872 5.1.2 Statistical test left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(host_percentage= host_bases/bases_post_fastp*100) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% lm(host_percentage ~ sample_type + tax_group, data = .) %&gt;% anova() %&gt;% tidy() # A tibble: 3 × 6 term df sumsq meansq statistic p.value &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 sample_type 1 798510. 798510. 991. 2.27e-177 2 tax_group 4 456840. 114210. 142. 6.34e-107 3 Residuals 2019 1626206. 805. NA NA 5.1.3 Plot left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(host_percentage= host_bases/bases_post_fastp*100) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(., aes(y=host_percentage, x=tax_group, color=tax_group, fill=tax_group, group=tax_group)) + geom_jitter(alpha = 0.2, width=0.3) + geom_boxplot(outlier.shape = NA) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + theme_classic() + facet_grid(~sample_type) + labs(y=&quot;Host percentage&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/hostdata_taxa.pdf&quot;,width=9, height=4, units=&quot;in&quot;) left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(host_percentage= host_bases/bases_post_fastp*100) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(., aes(y=host_percentage, x=sample_type, group=sample_type)) + stat_halfeye(adjust = 1, width = 0.5, .width = 0, justification = 0,normalize = &quot;groups&quot;) + theme_classic() + labs(y=&quot;Host percentage&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/hostdata_taxa_all.pdf&quot;,width=9, height=4, units=&quot;in&quot;) 5.2 Genome depth 5.2.1 Data overview left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/reference.tsv&quot;),by=&quot;reference_id&quot;) %&gt;% mutate(depth=host_bases/(reference_size*1000000)) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(sample_type) %&gt;% summarise(mean=mean(depth, na.rm=T),sd=sd(depth, na.rm=T)) %&gt;% tt() tinytable_7jwo7l8ap1wuiepshl26 .table td.tinytable_css_gunsgupjkji3vwvu84g1, .table th.tinytable_css_gunsgupjkji3vwvu84g1 { border-bottom: solid 0.1em #d3d8dc; } sample_type mean sd Anal/cloacal swab 2.4220586 2.079382 Faecal 0.6573435 1.628490 left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/reference.tsv&quot;),by=&quot;reference_id&quot;) %&gt;% mutate(depth=host_bases/(reference_size*1000000)) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(tax_group) %&gt;% summarise(mean=mean(depth, na.rm=T),sd=sd(depth, na.rm=T)) %&gt;% tt() tinytable_pro3ms776i7qx369ik40 .table td.tinytable_css_u7akswggex66ena6x2q5, .table th.tinytable_css_u7akswggex66ena6x2q5 { border-bottom: solid 0.1em #d3d8dc; } tax_group mean sd Amphibians 0.001921062 0.01314311 Bats 1.246383229 1.39021316 Birds 2.478493853 3.08305053 Mammals 0.595230910 1.27474674 Reptiles 0.345241814 0.60682463 5.2.2 Statistical test left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/reference.tsv&quot;),by=&quot;reference_id&quot;) %&gt;% mutate(depth=host_bases/(reference_size*1000000)) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% lm(depth ~ sample_type + tax_group, data = .) %&gt;% anova() %&gt;% tidy() # A tibble: 3 × 6 term df sumsq meansq statistic p.value &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 sample_type 1 893. 893. 349. 6.07e-72 2 tax_group 4 772. 193. 75.3 1.28e-59 3 Residuals 2035 5211. 2.56 NA NA 5.2.3 Plot left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/reference.tsv&quot;),by=&quot;reference_id&quot;) %&gt;% mutate(depth=host_bases/(reference_size*1000000)) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(., aes(y=depth, x=sample_type, color=sample_type, fill=sample_type, group=sample_type)) + ylim(0,10)+ geom_boxplot(outlier.shape = NA) + scale_color_manual(values = c(&quot;#bdca50&quot;, &quot;#AA3377&quot;)) + scale_fill_manual(values = c(&quot;#bdca5080&quot;, &quot;#AA337780&quot;)) + theme_classic() + labs(y=&quot;Host depth of coverage&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/hostdepth_taxa.pdf&quot;,width=5, height=4, units=&quot;in&quot;) "],["microbial-metagenomics.html", "6 Microbial metagenomics 6.1 Microbial DNA fraction 6.2 Domain-adjusted mapping rate 6.3 Assemblies 6.4 Number of MAGs 6.5 MAG quality 6.6 Assemblies vs MAGs", " 6 Microbial metagenomics 6.1 Microbial DNA fraction 6.1.1 Data overview left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(sample_type) %&gt;% summarise(mean=mean(singlem_fraction, na.rm=T),sd=sd(singlem_fraction, na.rm=T)) %&gt;% tt() tinytable_rci3vpku7zr4kxac7e6d .table td.tinytable_css_65h69u9izxdcrgjr7o94, .table th.tinytable_css_65h69u9izxdcrgjr7o94 { border-bottom: solid 0.1em #d3d8dc; } sample_type mean sd Anal/cloacal swab 0.2598510 0.3407707 Faecal 0.5203527 0.2759433 left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(tax_group) %&gt;% summarise(mean=mean(singlem_fraction, na.rm=T),sd=sd(singlem_fraction, na.rm=T)) %&gt;% tt() tinytable_u0jv9yz9r4qs5ylzmp5h .table td.tinytable_css_86xv7i7hnl2oatu7xume, .table th.tinytable_css_86xv7i7hnl2oatu7xume { border-bottom: solid 0.1em #d3d8dc; } tax_group mean sd Amphibians 0.5807892 0.1799217 Bats 0.2903304 0.2949997 Birds 0.2777113 0.3360460 Mammals 0.5871579 0.2841097 Reptiles 0.5885336 0.1701545 6.1.2 Statistical test left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% lm(singlem_fraction ~ sample_type * tax_group, data = .) %&gt;% anova() %&gt;% tidy() # A tibble: 4 × 6 term df sumsq meansq statistic p.value &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 sample_type 1 19.4 19.4 311. 6.69e- 65 2 tax_group 4 35.1 8.78 141. 3.70e-106 3 sample_type:tax_group 4 6.96 1.74 27.9 1.46e- 22 4 Residuals 2015 126. 0.0624 NA NA 6.1.3 Plot left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(host_percentage= host_bases/bases_post_fastp*100) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(aes(y=singlem_fraction, x=tax_group, color=tax_group, fill=tax_group, group=tax_group)) + ylim(0, 1) + geom_jitter(position = position_jitter(width = 0.2), alpha = 0.5, size=0.5) + stat_halfeye(adjust = 0.5,width = 0.5, .width = 0, justification = -.55,normalize = &quot;groups&quot;) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + theme_classic() + facet_grid(~sample_type) + labs(y=&quot;Host percentage&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/microbialdata_taxa.pdf&quot;,width=9, height=4, units=&quot;in&quot;) left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(host_percentage= host_bases/bases_post_fastp*100) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(aes(y=singlem_fraction, x=sample_type, group=sample_type)) + stat_halfeye(adjust = 1, width = 0.5, .width = 0, justification = 0,normalize = &quot;groups&quot;) + theme_classic() + labs(y=&quot;Host percentage&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/microbialdata_taxa_all.pdf&quot;,width=9, height=4, units=&quot;in&quot;) 6.2 Domain-adjusted mapping rate 6.2.1 Data summary left_join(read_tsv(&quot;data/mapping.tsv&quot;), read_tsv(&quot;data/preprocessing.tsv&quot;), by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(singlem_fraction=ifelse(singlem_fraction&gt;1,100,singlem_fraction*100)) %&gt;% mutate(damr=ifelse(singlem_fraction&lt;mapping_percentage,100,(mapping_percentage/singlem_fraction)*100)) %&gt;% filter(singlem_fraction&gt;0) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(sample_type) %&gt;% summarise(mean=mean(damr, na.rm=T),sd=sd(damr, na.rm=T)) %&gt;% tt() tinytable_f2mxglcwsmv0r6m9iwuj .table td.tinytable_css_n1d6nh35i6b395mm5u0v, .table th.tinytable_css_n1d6nh35i6b395mm5u0v { border-bottom: solid 0.1em #d3d8dc; } sample_type mean sd Anal/cloacal swab 72.84533 22.25244 Faecal 86.58154 25.00932 left_join(read_tsv(&quot;data/mapping.tsv&quot;), read_tsv(&quot;data/preprocessing.tsv&quot;), by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(singlem_fraction=ifelse(singlem_fraction&gt;1,100,singlem_fraction*100)) %&gt;% mutate(damr=ifelse(singlem_fraction&lt;mapping_percentage,100,(mapping_percentage/singlem_fraction)*100)) %&gt;% filter(singlem_fraction&gt;0) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% group_by(tax_group) %&gt;% summarise(mean=mean(damr, na.rm=T),sd=sd(damr, na.rm=T)) %&gt;% tt() tinytable_4ujca91azoj8d8bwexox .table td.tinytable_css_n1fmecil6gaavd83j81j, .table th.tinytable_css_n1fmecil6gaavd83j81j { border-bottom: solid 0.1em #d3d8dc; } tax_group mean sd Amphibians 89.19356 24.84575 Bats 80.94051 24.67483 Birds 67.03815 24.99000 Mammals 91.06092 16.77450 Reptiles 84.52325 31.14150 6.2.2 Statistical test left_join(read_tsv(&quot;data/mapping.tsv&quot;), read_tsv(&quot;data/preprocessing.tsv&quot;), by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(singlem_fraction=ifelse(singlem_fraction&gt;1,100,singlem_fraction*100)) %&gt;% mutate(damr=ifelse(singlem_fraction&lt;mapping_percentage,100,(mapping_percentage/singlem_fraction)*100)) %&gt;% filter(singlem_fraction&gt;0) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% lm(damr ~ sample_type + tax_group, data = .) %&gt;% anova() %&gt;% tidy() # A tibble: 3 × 6 term df sumsq meansq statistic p.value &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 sample_type 1 51142. 51142. 90.4 4.42e-21 2 tax_group 4 114714. 28679. 50.7 4.21e-41 3 Residuals 2561 1449606. 566. NA NA 6.2.3 Plot left_join(read_tsv(&quot;data/mapping.tsv&quot;), read_tsv(&quot;data/preprocessing.tsv&quot;), by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(singlem_fraction=ifelse(singlem_fraction&gt;1,100,singlem_fraction*100)) %&gt;% mutate(damr=ifelse(singlem_fraction&lt;mapping_percentage,100,(mapping_percentage/singlem_fraction)*100)) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(singlem_fraction&gt;0) %&gt;% ggplot(aes(y=damr, x=sample_type, color=sample_type, fill=sample_type, group=sample_type)) + geom_boxplot(outlier.shape = NA) + scale_color_manual(values = c(&quot;#bdca50&quot;, &quot;#AA3377&quot;)) + scale_fill_manual(values = c(&quot;#bdca5080&quot;, &quot;#AA337780&quot;)) + theme_classic() + labs(y=&quot;DAMR&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/damr_type.pdf&quot;,width=5, height=4, units=&quot;in&quot;) left_join(read_tsv(&quot;data/mapping.tsv&quot;), read_tsv(&quot;data/preprocessing.tsv&quot;), by=&quot;sequence_id&quot;) %&gt;% left_join(read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% mutate(singlem_fraction=ifelse(singlem_fraction&gt;1,100,singlem_fraction*100)) %&gt;% mutate(damr=ifelse(singlem_fraction&lt;mapping_percentage,100,(mapping_percentage/singlem_fraction)*100)) %&gt;% #convert bases to gigabases (GB) filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(singlem_fraction&gt;0) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(aes(y=singlem_fraction, x=tax_group, color=tax_group, fill=tax_group, group=tax_group)) + geom_jitter(position = position_jitter(width = 0.2), alpha = 0.5, size=0.5) + stat_halfeye(adjust = 0.5,width = 0.5, .width = 0, justification = -.55,normalize = &quot;groups&quot;) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + theme_classic() + labs(y=&quot;DAMR&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/damr_taxa.pdf&quot;,width=9, height=4, units=&quot;in&quot;) 6.3 Assemblies 6.3.1 Data summary left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% group_by(tax_group) %&gt;% summarise(mean=mean(assembly_length, na.rm=T),sd=sd(assembly_length, na.rm=T)) %&gt;% tt() tinytable_84rgb4euot2chg2ul0wc .table td.tinytable_css_ctcyr3wtgq8blqg07133, .table th.tinytable_css_ctcyr3wtgq8blqg07133 { border-bottom: solid 0.1em #d3d8dc; } tax_group mean sd Amphibians 116614689 68762523 Bats 31069176 77144825 Birds 8688016 26409919 Mammals 96415766 69841084 Reptiles 139349280 74190452 left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% group_by(sample_type) %&gt;% summarise(mean=mean(assembly_length, na.rm=T),sd=sd(assembly_length, na.rm=T)) %&gt;% tt() tinytable_fq8gzammd9mf9ru4xat5 .table td.tinytable_css_vcl137tiar25vjackbu4, .table th.tinytable_css_vcl137tiar25vjackbu4 { border-bottom: solid 0.1em #d3d8dc; } sample_type mean sd Anal/cloacal swab 13208042 34504175 Faecal 95955306 83010036 6.3.2 Statistical test left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% lm(assembly_length ~ sample_type + tax_group, data = .) %&gt;% anova() %&gt;% tidy() # A tibble: 3 × 6 term df sumsq meansq statistic p.value &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 sample_type 1 1.07e18 1.07e18 247. 8.15e- 52 2 tax_group 4 2.97e18 7.43e17 171. 2.10e-121 3 Residuals 1549 6.73e18 4.34e15 NA NA 6.3.3 Plot left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(aes(y=assembly_length, x=tax_group, color=tax_group, fill=tax_group, group=tax_group)) + ylim(0,400000000)+ geom_jitter(alpha = 0.3, width=0.3, size=0.5) + geom_violin() + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + theme_classic() + facet_grid(~sample_type, scale=&quot;free&quot;) + labs(y=&quot;Assembly size&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/assemblysize_taxa.pdf&quot;,width=9, height=4, units=&quot;in&quot;) left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% ggplot(aes(y=assembly_length, x=sample_type, group=sample_type)) + ylim(0,400000000)+ stat_halfeye(adjust = 1, width = 0.5, .width = 0, justification = 0,normalize = &quot;groups&quot;) + theme_classic() + labs(y=&quot;Assembly size&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/assemblysize_taxa_all.pdf&quot;,width=9, height=4, units=&quot;in&quot;) 6.4 Number of MAGs 6.4.1 Summary statistics left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% group_by(tax_group) %&gt;% summarise(mean=mean(assembly_num_bins, na.rm=T),sd=sd(assembly_num_bins, na.rm=T)) %&gt;% tt() tinytable_5nszlhp1h61kk7fn4x61 .table td.tinytable_css_mc6jk4zozwspzt42hqd5, .table th.tinytable_css_mc6jk4zozwspzt42hqd5 { border-bottom: solid 0.1em #d3d8dc; } tax_group mean sd Amphibians 23.758389 14.944334 Bats 3.692308 7.451098 Birds 1.582979 5.600340 Mammals 22.062635 16.345908 Reptiles 23.924107 13.736366 left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% group_by(sample_type) %&gt;% summarise(mean=mean(assembly_num_bins, na.rm=T),sd=sd(assembly_num_bins, na.rm=T)) %&gt;% tt() tinytable_bvvwjskavky2og2w3nil .table td.tinytable_css_g44kyxqoqkacr28rykte, .table th.tinytable_css_g44kyxqoqkacr28rykte { border-bottom: solid 0.1em #d3d8dc; } sample_type mean sd Anal/cloacal swab 2.644068 6.971768 Faecal 18.386792 16.099835 6.4.2 Statistical test left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% lm(assembly_num_bins ~ sample_type * tax_group, data = .) %&gt;% anova() %&gt;% tidy() # A tibble: 4 × 6 term df sumsq meansq statistic p.value &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 sample_type 1 38873. 38873. 259. 6.50e- 54 2 tax_group 4 119651. 29913. 199. 1.06e-137 3 sample_type:tax_group 4 13549. 3387. 22.5 4.16e- 18 4 Residuals 1545 232279. 150. NA NA 6.4.3 Plot left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% mutate(tax_group=factor(tax_group,levels=c(&quot;Amphibians&quot;,&quot;Reptiles&quot;,&quot;Birds&quot;,&quot;Bats&quot;,&quot;Mammals&quot;))) %&gt;% ggplot(aes(y=assembly_num_bins, x=tax_group, color=tax_group, fill=tax_group, group=tax_group)) + ylim(0,100) + geom_jitter(alpha = 0.6, width=0.3, size=0.5) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + theme_classic() + facet_grid(~sample_type, scale=&quot;free&quot;) + labs(y=&quot;Number of MAGs&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/numberofbins_taxa.pdf&quot;,width=9, height=4, units=&quot;in&quot;) left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% ggplot(aes(y=assembly_num_bins, x=sample_type, group=sample_type)) + ylim(0,100) + stat_halfeye(adjust = 1, width = 0.5, .width = 0, justification = 0,normalize = &quot;groups&quot;) + theme_classic() + labs(y=&quot;Number of MAGs&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/numberofbins_taxa_all.pdf&quot;,width=9, height=4, units=&quot;in&quot;) 6.5 MAG quality left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% left_join(read_tsv(&quot;data/mag.tsv&quot;), by=&quot;assembly_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% ggplot(aes(y=mag_completeness, x=tax_group, color=tax_group, fill=tax_group, group=tax_group)) + ylim(50,100) + #geom_jitter(position = position_jitter(width = 0.2), alpha = 0.5, size=0.5) + stat_halfeye(adjust = 0.5, width = 0.5, .width = 0,normalize = &quot;groups&quot;) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + theme_classic() + labs(y=&quot;Number of bins&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/completeness_taxa.pdf&quot;,width=5, height=4, units=&quot;in&quot;) left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% left_join(read_tsv(&quot;data/mag.tsv&quot;), by=&quot;assembly_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% ggplot(aes(y=mag_contamination, x=tax_group, color=tax_group, fill=tax_group, group=tax_group)) + ylim(0,10) + #geom_jitter(position = position_jitter(width = 0.2), alpha = 0.5, size=0.5) + stat_halfeye(adjust = 0.5, width = 0.5, .width = 0,normalize = &quot;groups&quot;) + scale_color_manual(values = c(&quot;#228833&quot;,&quot;#EE6677&quot;,&quot;#CCBB44&quot;,&quot;#66CCEE&quot;,&quot;#4477AA&quot;)) + scale_fill_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + theme_classic() + labs(y=&quot;Number of bins&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) + theme_classic() ggsave(&quot;figures/contamination_taxa.pdf&quot;,width=5, height=4, units=&quot;in&quot;) 6.6 Assemblies vs MAGs left_join(read_tsv(&quot;data/preprocessing.tsv&quot;), read_tsv(&quot;data/sample.tsv&quot;), by=&quot;sample_id&quot;) %&gt;% left_join(read_tsv(&quot;data/assembly.tsv&quot;), by=&quot;preprocessing_id&quot;) %&gt;% left_join(read_tsv(&quot;data/mag.tsv&quot;), by=&quot;assembly_id&quot;) %&gt;% filter(sample_type %in% c(&quot;Faecal&quot;, &quot;Anal/cloacal swab&quot;)) %&gt;% filter(assembly_type == &quot;Individual&quot;) %&gt;% ggplot(aes(y=assembly_num_bins, x=assembly_length, color=tax_group)) + geom_point(alpha=0.5, size=0.5) + scale_color_manual(values = c(&quot;#22883380&quot;,&quot;#EE667780&quot;,&quot;#CCBB4480&quot;,&quot;#66CCEE80&quot;,&quot;#4477AA80&quot;)) + theme_classic() + labs(y=&quot;Number of bins&quot;, x=&quot;Assembly length&quot;, color=&quot;Taxa&quot;, fill=&quot;Taxa&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
